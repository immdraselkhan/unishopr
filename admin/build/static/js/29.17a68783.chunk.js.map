{"version":3,"sources":["container/userManagement/users/list.js","container/userManagement/users/form.js","redux/userManagement/users/actionCreator.js","container/userManagement/users/index.js"],"names":["UserList","isLoading","users","showModal","getUsers","getUserInfo","deleteUser","columns","title","dataIndex","key","className","render","Scope","checkScopes","size","type","icon","name","onClick","Alert","confirm","action","headerButtons","ghost","subTitle","total","onBack","window","history","back","extra","rowKey","bordered","loading","dataSource","data","pagination","current","page","onChange","pageNo","perPageNo","UserForm","form","state","user","addUser","updateUser","handleOk","roles","dispatch","useDispatch","handleSubmit","_id","Object","assign","footerButtons","htmlType","disabled","md","modalType","visible","onCancel","footer","width","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","rules","initialValue","personal","firstName","label","placeholder","lastName","phone","username","email","fathersName","fathersPhone","mothersName","mothersPhone","presentAddress","permanentAddress","role","Option","value","map","status","gender","Group","superAdmin","fetchUsersAction","actions","resetUserFormAction","fetchUserAction","req","postRequest","url","Constants","USER_MANAGEMENT","auth","body","cb","fetchUsers","perPage","putRequest","deleteRequest","queries","getRequest","UsersData","useForm","useSelector","utilities","umUsers","useState","setState","useEffect","fetchRoles","fetchData","then","r","resetFields","showModalEdit","fetchUser"],"mappings":"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","file":"static/js/29.17a68783.chunk.js","sourcesContent":["import {Button as AntButton, PageHeader, Table} from \"antd\";\nimport React from \"react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Scope} from \"../../../services/scopeService\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Alert} from \"../../../services/alertService\";\n\nconst UserList = (\n    {\n        isLoading,\n        users,\n        showModal,\n        getUsers,\n        getUserInfo,\n        deleteUser\n    }\n) => {\n    const columns = [\n        {\n            title: 'Username',\n            dataIndex: 'username',\n            key: 'username',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            dataIndex: '_id',\n            key: '_id',\n            render: (key) => <div className=\"text-right\">\n                {Scope.checkScopes(['um_users_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-info border-info\"\n                        icon={<FontAwesome name={\"edit\"} />}\n                        onClick={() => getUserInfo(key)}\n                    />\n                )}\n                {Scope.checkScopes(['um_users_delete']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-danger border-danger\"\n                        icon={<FontAwesome name={\"trash\"} />}\n                        onClick={() => Alert.confirm({action: deleteUser(key)})}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['um_users_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14}/>\n                    Add New\n                </Button>\n            )}\n        </div>\n    ];\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Users\"\n                subTitle={`List of all ${users.total} users.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={users.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: users.total,\n                        current: users.page,\n                        onChange: async (pageNo, perPageNo) => await getUsers(pageNo, perPageNo)\n                    }}\n                />\n            </PageHeader>\n        </div>\n    )\n};\n\nexport default UserList;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Radio, Row, Select} from \"antd\";\n\nconst UserForm = ({form, state, user, addUser, updateUser, isLoading, handleOk, roles}) => {\n    const dispatch = useDispatch();\n    const layout = {labelCol: {span: 8}, wrapperCol: {span: 16}};\n    const validateMessages = { required: '${label} is required!' };\n\n    const handleSubmit = async (data) => {\n        if (user?._id) {\n            Object.assign(data, {_id: user._id});\n            await dispatch(updateUser(data, handleOk))\n        } else\n            await dispatch(addUser(data, handleOk));\n    };\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return (\n        <Row md={12}>\n            <Modal\n                type={state.modalType}\n                title=\"Users Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n                width={1000}\n            >\n                <Form\n                    {...layout}\n                    name={'userForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <Row>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"firstName\"\n                                rules={[{required: true}]}\n                                initialValue={user?.personal?.firstName ? user?.personal?.firstName : null}\n                                label=\"First Name\"\n                            >\n                                <Input placeholder=\"First Name\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"lastName\"\n                                rules={[{required: true}]}\n                                initialValue={user?.personal?.lastName ? user?.personal?.lastName : null}\n                                label=\"Last Name\"\n                            >\n                                <Input placeholder=\"Last Name\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"phone\"\n                                initialValue={user?.personal?.phone ? user?.personal?.phone : \"\"}\n                                rules={[{required: true}]}\n                                label=\"Phone\"\n                            >\n                                <Input placeholder=\"Phone\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"username\"\n                                initialValue={user?.username ? user?.username : null}\n                                rules={[{required: true}]}\n                                label=\"Username\"\n                            >\n                                <Input placeholder=\"Username\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"email\"\n                                initialValue={user?.email ? user?.email : null}\n                                rules={[{required: true}]}\n                                label=\"Email\"\n                            >\n                                <Input placeholder=\"Email\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"fathersName\"\n                                initialValue={user?.personal?.fathersName ? user?.personal?.fathersName : \"\"}\n                                label=\"Father's Name\"\n                            >\n                                <Input placeholder=\"Father's Name\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"fathersPhone\"\n                                initialValue={user?.personal?.fathersPhone ? user?.personal?.fathersPhone : \"\"}\n                                label=\"Father's Phone\"\n                            >\n                                <Input placeholder=\"Father's Phone\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"mothersName\"\n                                initialValue={user?.personal?.mothersName ? user?.personal?.mothersName : \"\"}\n                                label=\"Mother's Name\"\n                            >\n                                <Input placeholder=\"Mother's Name\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"mothersPhone\"\n                                initialValue={user?.personal?.mothersPhone ? user?.personal?.mothersPhone : \"\"}\n                                label=\"Mother's Phone\"\n                            >\n                                <Input placeholder=\"Mother's Phone\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"presentAddress\"\n                                initialValue={user?.personal?.presentAddress ? user?.personal?.presentAddress : \"\"}\n                                label=\"Present Address\"\n                            >\n                                <Input placeholder=\"Present Address\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"permanentAddress\"\n                                initialValue={user?.personal?.permanentAddress ? user?.personal?.permanentAddress : \"\"}\n                                label=\"Permanent Address\"\n                            >\n                                <Input placeholder=\"Permanent Address\"/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"roleId\"\n                                initialValue={user?.role?._id ? user?.role?._id : \"\"}\n                                rules={[{required: true}]}\n                                label=\"Role\"\n                            >\n                                <Select>\n                                    <Select.Option value=\"\">Roles</Select.Option>\n                                    {roles.map((role) =>\n                                        <Select.Option key={role._id} value={role._id}>{role.name}</Select.Option>\n                                    )}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"status\"\n                                initialValue={user?.status ? user?.status : ''}\n                                rules={[{required: true}]}\n                                label=\"Status\"\n                            >\n                                <Select>\n                                    <Select.Option value=\"\">Select One</Select.Option>\n                                    <Select.Option value=\"active\">Active</Select.Option>\n                                    <Select.Option value=\"inactive\">Inactive</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"gender\"\n                                initialValue={user?.personal?.gender ? user?.personal?.gender : null}\n                                rules={[{required: true}]}\n                                label=\"Gender\"\n                            >\n                                <Radio.Group>\n                                    <Radio value=\"male\">Male</Radio>\n                                    <Radio value=\"female\">Female</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"superAdmin\"\n                                initialValue={!!user?.superAdmin}\n                                rules={[{required: true}]}\n                                label=\"Super Admin\"\n                            >\n                                <Radio.Group>\n                                    <Radio value={true}>Yes</Radio>\n                                    <Radio value={false}>No</Radio>\n                                </Radio.Group>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </Row>\n    )\n};\n\nexport default UserForm;\n","import {Constants} from '../../../config/constants';\nimport actions from './actions';\nimport {RequestService as req} from '../../../services/requestService';\n\nconst {fetchUsersAction, resetUserFormAction, fetchUserAction} = actions;\n\nexport const addUser = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({\n            url: `${Constants.USER_MANAGEMENT}users`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const updateUser = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.USER_MANAGEMENT}users/${data._id}`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const resetUserForm = () => dispatch => dispatch(resetUserFormAction());\nexport const fetchUser = (_id, action) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.USER_MANAGEMENT}users/${_id}`,\n            auth: 'bearer'\n        }, async (cb) => {\n            await dispatch(fetchUserAction(cb));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const deleteUser = (_id) => {\n    return async dispatch => {\n        await req.deleteRequest({\n            url: `${Constants.USER_MANAGEMENT}users/${_id}`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchUsers({page: 1, perPage: 10})))\n    };\n};\n\nexport const fetchUsers = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.USER_MANAGEMENT}users`,\n            auth: 'bearer',\n            queries: queries\n        }, async (cb) => {\n            await dispatch(fetchUsersAction(cb));\n        })\n    }\n};\n","import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form} from \"antd\";\nimport UserList from \"./list\";\nimport UserForm from \"./form\";\nimport {Main} from \"../../styled\";\nimport {\n    addUser,\n    deleteUser,\n    fetchUser,\n    fetchUsers,\n    resetUserForm,\n    updateUser\n} from \"../../../redux/userManagement/users/actionCreator\";\nimport {fetchRoles} from \"../../../redux/utilities/actionCreator\";\n\nconst UsersData = () => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const users = useSelector(state => state.umUsers.users);\n    const user = useSelector(state => state.umUsers.user);\n    const roles = useSelector(state => state.utilities.roles);\n    const [state, setState] = useState({ visible: false });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(fetchRoles())\n        };\n        fetchData().then(r => {});\n    }, [dispatch]);\n\n    const getUsers = async (page, perPage) => await dispatch(fetchUsers({page, perPage}));\n    const getUserInfo = (_id) => dispatch(fetchUser(_id, showModalEdit));\n\n    const showModal = async type => {\n        await setState({ ...state, visible: true });\n        await dispatch(resetUserForm());\n        await form.resetFields();\n    };\n\n    const showModalEdit = async () => {\n        await setState({ ...state, visible: true });\n        await form.resetFields();\n    };\n\n    const handleOk = () => {\n        setState({ ...state, visible: false });\n    };\n\n    return (\n        <Main>\n            <UserList\n                state={state}\n                setState={setState}\n                isLoading={isLoading}\n                showModal={showModal}\n                users={users}\n                getUsers={getUsers}\n                getUserInfo={getUserInfo}\n                deleteUser={deleteUser}\n            />\n\n            <UserForm\n                form={form}\n                state={state}\n                isLoading={isLoading}\n                handleOk={handleOk}\n                user={user}\n                roles={roles}\n                addUser={addUser}\n                updateUser={updateUser}\n            />\n        </Main>\n    );\n};\n\nexport default UsersData;\n"],"sourceRoot":""}