{"version":3,"sources":["container/webSetup/tags/form.js","container/webSetup/tags/list.js","redux/webSetup/tags/actionCreator.js","container/webSetup/tags/index.js"],"names":["TagForm","form","state","tag","addTag","updateTag","isLoading","handleOk","dispatch","useDispatch","handleSubmit","data","_id","Object","assign","footerButtons","key","htmlType","type","disabled","size","md","modalType","title","visible","onCancel","footer","labelCol","span","wrapperCol","name","id","validateMessages","required","onFinish","Item","rules","initialValue","label","placeholder","description","TextArea","status","Option","value","TagList","showModal","tags","getTags","getTagInfo","deleteTag","columns","dataIndex","render","className","Scope","checkScopes","icon","onClick","Alert","confirm","action","headerButtons","ghost","subTitle","total","onBack","window","history","back","extra","rowKey","bordered","loading","dataSource","pagination","current","page","onChange","pageNo","perPageNo","fetchTagsAction","actions","fetchTagAction","resetTagFormAction","req","postRequest","url","Constants","WEB_SETUP","auth","body","cb","fetchTags","queries","getRequest","putRequest","deleteRequest","TagsData","useSelector","utilities","wsTags","useForm","useState","colorModal","uploading","setState","useEffect","perPage","fetchData","then","r","resetFields","showModalEdit","fetchTag"],"mappings":"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","file":"static/js/37.22e25357.chunk.js","sourcesContent":["import { Col, Form, Input, Modal, Select } from \"antd\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"../../../components/buttons/buttons\";\n\nconst TagForm = ({\n    form, state, tag, addTag,\n    updateTag, isLoading, handleOk\n}) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n\n    const validateMessages = {\n        required: '${label} is required!',\n    };\n\n    const handleSubmit = async (data) => {\n        if (tag._id){\n            Object.assign(data, {_id: tag._id});\n            await dispatch(updateTag(data, handleOk))\n        } else\n            await dispatch(addTag(data, handleOk));\n    };\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\">\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n    return (\n        <Col md={12}>\n            <Modal\n                type={state.modalType}\n                title=\"Tag Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n            >\n                <Form\n                    {...layout}\n                    name={'tagForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}>\n                    <Form.Item\n                        name=\"name\"\n                        rules={[{required: true}]}\n                        initialValue={tag.name ? tag.name : null}\n                        label=\"Name\">\n                        <Input placeholder=\"name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"description\"\n                        initialValue={tag.description ? tag.description : null}\n                        // rules={[{ required: true }]}\n                        label=\"Description\">\n                        <Input.TextArea placeholder=\"Description\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"status\"\n                        initialValue={tag.status ? tag.status : ''}\n                        rules={[{ required: true }]}\n                        label=\"Status\">\n                        <Select>\n                            <Select.Option value=\"\">Status</Select.Option>\n                            <Select.Option value=\"active\">Active</Select.Option>\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n        </Col>\n    )\n}\n\nexport default TagForm;\n","import React from \"react\";\nimport {Scope} from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Alert} from \"../../../services/alertService\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\nimport {Button as AntButton, PageHeader, Table} from \"antd\";\n\nconst TagList = (\n    {\n        showModal,\n        isLoading,\n        tags,\n        getTags,\n        getTagInfo,\n        deleteTag\n    }\n) => {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n            render: (key) => key ? key : 'N/A'\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            dataIndex: '_id',\n            key: '_id',\n            render: (key) => <div className=\"text-right\">\n                {Scope.checkScopes(['ws_tags_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-info border-info\"\n                        icon={<FontAwesome name={\"edit\"} />}\n                        onClick={() => getTagInfo(key)}\n                    />\n                )}\n                {Scope.checkScopes(['ws_tags_delete']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-danger border-danger\"\n                        icon={<FontAwesome name={\"trash\"} />}\n                        onClick={() => Alert.confirm({action: deleteTag(key)})}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['ws_tags_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14}/>\n                    Add New\n                </Button>\n            )}\n        </div>\n    ]\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Tags\"\n                subTitle={`List of all ${tags?.total} Tags.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={tags.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: tags.total,\n                        current: tags.page,\n                        onChange: async (pageNo, perPageNo) => await getTags(pageNo, perPageNo)\n                    }} />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default TagList;\n","import { Constants } from \"../../../config/constants\";\nimport { RequestService as req } from \"../../../services/requestService\";\nimport actions from './actions';\n\nconst { fetchTagsAction, fetchTagAction, resetTagFormAction } = actions;\n\nexport const addTag = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({ url: Constants.WEB_SETUP + 'tags', auth: 'bearer', body: data}, async (cb) => {\n            await dispatch(fetchTags());\n            await dispatch(action);\n        })\n    };\n};\n\nexport const fetchTags = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.WEB_SETUP + 'tags',\n            queries, auth: 'bearer'\n        }, (cb) => dispatch(fetchTagsAction(cb)))\n    };\n};\n\nexport const updateTag = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({ url: Constants.WEB_SETUP + 'tags/' + data._id, auth: 'bearer', body: data},  async (cb) => {\n            await dispatch(fetchTags());\n            await dispatch(action);\n        })\n    };\n};\n\nexport const resetTagForm = () => dispatch => dispatch(resetTagFormAction());\nexport const fetchTag = (_id, action) => {\n    return async dispatch => {\n        await req.getRequest({ url: Constants.WEB_SETUP + 'tags/' + _id, auth: 'bearer'}, async (cb) => {\n            await dispatch(fetchTagAction(cb));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const deleteTag = (id) => {\n    return async dispatch => {\n        await req.deleteRequest({ url: Constants.WEB_SETUP + 'tags/' + id, auth: 'bearer'}, (cb) => dispatch(fetchTags()))\n    };\n};\n","import { Form } from \"antd\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Main } from \"../../styled\";\nimport TagForm from \"./form\";\nimport TagList from \"./list\";\nimport {\n    addTag,\n    deleteTag,\n    fetchTag,\n    fetchTags,\n    resetTagForm,\n    updateTag\n} from \"../../../redux/webSetup/tags/actionCreator\";\n\nconst TagsData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const tags = useSelector(state => state.wsTags.tags);\n    const tag = useSelector(state => state.wsTags.tag);\n    const [form] = Form.useForm()\n\n    const [state, setState] = useState({\n        visible: false,\n        modalType: 'primary',\n        colorModal: false,\n        uploading: false,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchTags({page: 1, perPage: 10}))\n        };\n        fetchData().then(r => {});\n    }, []);\n\n    const getTags = async (page, perPage) => await dispatch(fetchTags({page, perPage}));\n    const getTagInfo = (_id) => dispatch(fetchTag(_id, showModalEdit));\n    const showModal = async type => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: type,\n        });\n        await dispatch(resetTagForm());\n        await form.resetFields();\n    };\n\n    const showModalEdit = async () => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: \"primary\",\n        });\n        await form.resetFields();\n    };\n\n    const handleOk = () => {\n        setState({\n            ...state,\n            visible: false,\n            colorModal: false,\n        });\n    };\n    return (\n        <Main>\n            <TagList\n                state={state}\n                setState={setState}\n                showModal={showModal}\n                isLoading={isLoading}\n                tags={tags}\n                getTags={getTags}\n                getTagInfo={getTagInfo}\n                deleteTag={deleteTag}/>\n\n            <TagForm\n                form={form}\n                state={state}\n                tag={tag}\n                addTag={addTag}\n                updateTag={updateTag}\n                handleOk={handleOk}\n                isLoading={isLoading}/>\n        </Main>\n    )\n}\n\nexport default TagsData;\n"],"sourceRoot":""}