{"version":3,"sources":["redux/clients/users/actionCreator.js","container/clients/users/form.js","container/clients/users/servicerReqForm.js","container/clients/users/list.js","container/clients/users/filter.js","container/clients/users/index.js","utility/dataTime.js","utility/utility.js","redux/clients/travelers/actionCreator.js","redux/clients/partners/actionCreator.js"],"names":["fetchUsersAction","actions","fetchUserInfoAction","resetUserFormAction","addUser","resetRequestFormAction","data","action","dispatch","req","postRequest","url","Constants","CLIENTS","auth","body","cb","fetchUsers","page","perPage","updateUser","putRequest","fetchUserInfo","_id","resetUserForm","travelerRequest","fetchTravelers","updateTraveler","partnerRequest","fetchPartners","queries","getRequest","fetchUsersToDownload","UserForm","isLoading","state","handleOk","form","userInfo","countries","useDispatch","user","handleSubmit","country","find","c","formData","firstName","lastName","email","phone","code","name","gender","Object","assign","footerButtons","key","htmlType","type","disabled","size","md","title","visible","onCancel","footer","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","rules","initialValue","label","placeholder","width","Option","value","length","map","ci","modalType","ServicesReqForm","props","updatePartner","services","overview","update","reqModalVisible","className","traveler","partner","TextArea","UserList","setState","filters","setFilters","users","showModal","showServiceReqModal","downloadUsers","history","useHistory","columns","render","photo","src","target","to","dataIndex","shortDateWithTime","isTraveler","icon","onClick","isPartner","Scope","checkScopes","push","headerButtons","danger","filterVisible","ghost","subTitle","total","onBack","window","back","extra","rowKey","bordered","loading","dataSource","pagination","current","onChange","pageNo","perPageNo","UsersFilter","filter","initialFilters","toString","number","resetFilters","resetFields","allowClear","createdDateFrom","createdDateTo","UsersData","useSelector","utilities","clientsUsers","utilitiesUsers","getUsers","useForm","useState","showFilter","useEffect","fetchData","then","r","utilitiesCountries","exportToCsv","fetchUtilitiesUsers","module","exports","shortDate","date","Date","toLocaleString","year","month","day","minuteToHours","minute","toFixed","dateStyle","timeStyle","isJsonString","str","JSON","parse","e","filename","rows","processRow","row","finalVal","j","innerValue","result","replace","search","csvFile","i","blob","Blob","navigator","msSaveBlob","link","document","createElement","undefined","download","URL","createObjectURL","setAttribute","style","visibility","appendChild","click","removeChild","phoneFormatted","includes","startsWith","slice","parseInt","fetchTravelersAction","approveRequest","fetchPartnersAction"],"mappings":"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","file":"static/js/15.26450021.chunk.js","sourcesContent":["import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nimport {fetchTravelers} from \"../travelers/actionCreator\";\nimport {fetchPartners} from \"../partners/actionCreator\";\nconst { fetchUsersAction, fetchUserInfoAction, resetUserFormAction, resetRequestFormAction } = actions;\n\nexport const addUser = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({\n            url: `${Constants.CLIENTS}users`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const updateUser = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.CLIENTS}users/update`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchUserInfo(data._id));\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n}\n\nexport const resetUserForm = () => dispatch => dispatch(resetUserFormAction());\n\nexport const travelerRequest = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.CLIENTS}travelers/request`,\n            auth: 'bearer',\n            body: data\n        },  async (cb) => {\n            await dispatch(fetchTravelers({page: 1, perPage: 10}));\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n}\n\nexport const updateTraveler= (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.CLIENTS}travelers/update`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchTravelers({page: 1, perPage: 10}));\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(fetchUserInfo(data._id));\n            await dispatch(action);\n        })\n    };\n}\n\nexport const partnerRequest = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.CLIENTS}partners/request`,\n            auth: 'bearer',\n            body: data\n        },  async (cb) => {\n            await dispatch(fetchPartners({page: 1, perPage: 10}));\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n}\n\nexport const updatePartner= (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.CLIENTS}partners/update`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchPartners({page: 1, perPage: 10}));\n            await dispatch(fetchUsers({page: 1, perPage: 10}));\n            await dispatch(fetchUserInfo(data._id));\n            await dispatch(action);\n        })\n    };\n}\n\n\nexport const fetchUsers = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'users',\n            queries,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchUsersAction(cb)))\n    };\n};\n\n\nexport const fetchUserInfo = (_id) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'users/' + _id,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchUserInfoAction(cb)))\n    };\n}\n\nexport const fetchUsersToDownload = (queries, action) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'users-to-download',\n            queries,\n            auth: 'bearer'\n        }, (cb) => action(cb))\n    };\n};","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Select} from \"antd\";\n\nconst UserForm = ({isLoading, state, handleOk, form, addUser, userInfo, countries, updateUser}) => {\n    const dispatch = useDispatch();\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n    const validateMessages = { required: '${label} is required!', };\n    const user = userInfo;\n\n    const handleSubmit = async (data) => {\n        const country = countries.find(c => c._id === data.country);\n        const  formData = {\n            firstName: data.firstName,\n            lastName: data.lastName,\n            email: data.email,\n            phone: {\n                phone: data.phone,\n                country: {\n                    _id: country._id,\n                    code: country.code,\n                    name: country.name\n                },\n            },\n            gender: data.gender,\n        }\n        if(user?._id ){\n            Object.assign(formData, {_id: user._id})\n            await dispatch(updateUser(formData, handleOk));\n        }\n        else {\n            await dispatch(addUser(formData, handleOk));\n        }\n    }\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return(\n        <Col md={12}>\n            <Modal\n                type={\"primary\"}\n                title=\"User Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n            >\n                <Form\n                    {...layout}\n                    name={'userForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        name=\"firstName\"\n                        rules={[{required: true}]}\n                        initialValue={user?.firstName ? user?.firstName : null}\n                        label=\"First Name\"\n                    >\n                        <Input  placeholder=\"First Name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"lastName\"\n                        rules={[{required: true}]}\n                        initialValue={user?.lastName ? user?.lastName : null}\n                        label=\"Last Name\"\n                    >\n                        <Input placeholder=\"Last Name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        initialValue={user?.email ? user?.email : null}\n                        rules={[{required: true}]}\n                        label=\"Email\"\n                    >\n                        <Input  placeholder=\"Email\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"country\"\n                        rules={[{required: true}]}\n                        label=\"Country Code\"\n                        initialValue={user?.phone.country._id? user?.phone.country._id : \"\"}\n                        width={100}\n                    >\n                        <Select>\n                            <Select.Option value=\"\">Country Code</Select.Option>\n                            {countries.length && countries.map((country, ci) => (\n                                <Select.Option value={country._id} key={ci}>{country.code}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"phone\"\n                        initialValue={user?.phone.phone ? user?.phone.phone : null}\n                        rules={[{required: true}]}\n                        label=\"Phone\"\n                        width={100}\n                    >\n                        <Input  placeholder=\"Phone\"/>\n                    </Form.Item>\n                    {\n                        state.modalType !== 'update' && (\n                            <>\n                                <Form.Item\n                                    name=\"gender\"\n                                    rules={[{required: true}]}\n                                    label=\"Gender\">\n                                    <Select>\n                                        <Select.Option value=\"\">gender</Select.Option>\n                                        <Select.Option value=\"male\">male</Select.Option>\n                                        <Select.Option value=\"female\">female</Select.Option>\n                                        <Select.Option value=\"other\">other</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </>\n                        )\n                    }\n                </Form>\n            </Modal>\n        </Col>\n\n    )\n}\n\nexport default UserForm;","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Modal, Input, Row,} from \"antd\";\n\nconst ServicesReqForm = (props) => {\n    const {\n        isLoading,\n        state,\n        handleOk,\n        form,\n        travelerRequest,\n        updateTraveler,\n        partnerRequest,\n        updatePartner,\n    } = props;\n\n    const dispatch = useDispatch();\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n    const validateMessages = { required: '${label} is required!', };\n    const  services = state.user?.services\n\n    const handleSubmit = async (data) => {\n        const formData = {\n            _id: state.user._id,\n            overview: data.overview,\n        }\n        if (state.update){\n            if(state.modalType === 'Traveler'){\n                await dispatch(updateTraveler(formData, handleOk));\n            } else if (state.modalType === 'Partner'){\n                await dispatch(updatePartner(formData, handleOk));\n            }\n        } else {\n            if (state.modalType === 'Traveler') {\n                await dispatch(travelerRequest(formData, handleOk));\n            } else if (state.modalType === 'Partner') {\n                await dispatch(partnerRequest(formData, handleOk));\n            }\n        }\n    }\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return(\n        <Col md={12}>\n            <Modal\n                type={state.modalType}\n                title={ state.modalType + \" Form\"}\n                visible={state.reqModalVisible }\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n                width={800}\n            >\n                <Form\n                    {...layout}\n                    name={'userForm'}\n                    form={form}\n                    id={'myForm'}\n                    className=\"my-form\"\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <div className=\"divider\"/>\n                     <Row>\n                         <Col md={24}>\n                             <Form.Item\n                                 labelCol={4}\n                                 wrapperCol={20}\n                                 name=\"overview\"\n                                 initialValue={\n                                    (state.modalType === 'Traveler' && services?.traveler?.overview ? services.traveler.overview : null) ||\n                                    (state.modalType === 'Partner' && services?.partner?.overview ? services.partner.overview : null)\n                                 }\n                                 rules={[{ required: false }]}\n                                 label=\"Overview\">\n                                    <Input.TextArea placeholder=\"Overview\"/>\n                             </Form.Item>\n                         </Col>\n                     </Row>\n                </Form>\n            </Modal>\n        </Col>\n    )\n}\n\nexport default ServicesReqForm;","import React from \"react\";\nimport { Avatar, PageHeader, Table, Button as AntButton } from \"antd\";\nimport { Constants } from \"../../../config/constants\";\nimport { Scope } from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport { useHistory } from \"react-router\";\nimport { Button } from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\nimport { Link } from \"react-router-dom\";\nimport { shortDateWithTime } from \"../../../utility/dataTime\";\n\nconst UserList = (\n    {\n        isLoading,\n        state,\n        setState,\n        filters,\n        setFilters,\n        users,\n        showModal,\n        showServiceReqModal,\n        downloadUsers\n    }) => {\n    const history = useHistory();\n\n    const columns = [\n        {\n            title: 'User',\n            render: (user) => <span className=\"d-flex\">\n                {/* <Avatar src={`${Constants.S3_BASE_URL(user.photo)}`} /> */}\n                {\n                    user?.photo ? <Avatar src={user?.photo} /> : <Avatar src={\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/matureman1-512.png\"} />\n                }\n                <span className=\"pl-5\">\n                    <Link target=\"_blank\" to={`/admin/client/users-profile/${user._id}`}>\n                        {`${user.firstName} ${user.lastName}`}<br />\n                        {user.phone.country.code}{user.phone.phone}\n                    </Link>\n                </span>\n            </span>\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n        },\n        {\n            title: 'Created At',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            render: (key) => <>{shortDateWithTime(key)}</>\n        },\n        {\n            title: <div className=\"text-center\">Traveler </div>,\n            render: (user) => <div className=\"text-center\">{user?.services?.traveler?.isTraveler ? <FeatherIcon icon=\"check\" size={14} /> : (\n                <AntButton\n                    size=\"small\"\n                    type=\"ghost\"\n                    className=\"color-primary border-primary\"\n                    onClick={() => showServiceReqModal(\"Traveler\", user,)}\n                    icon={<FontAwesome name={\"user-plus\"} />}\n                />)\n            }</div>\n        },\n        {\n            title: <div className=\"text-center\">Partner </div>,\n            render: (user) => <div className=\"text-center\">{user?.services?.partner?.isPartner ? <FeatherIcon icon=\"check\" size={14} /> : (\n                <AntButton\n                    size=\"small\"\n                    type=\"ghost\"\n                    className=\"color-primary border-primary\"\n                    onClick={() => showServiceReqModal(\"Partner\", user,)}\n                    icon={<FontAwesome name={\"user-plus\"} />}\n                />)\n            }</div>\n        },\n        {\n            title: <div className=\"text-center\">Profile</div>,\n            render: (key) => <div className=\"text-center\">\n                {Scope.checkScopes(['clients_users_index']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-primary border-primary\"\n                        icon={<FontAwesome name={\"info\"} />}\n                        onClick={() => history.push('/admin/client/users-profile/' + key._id)}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"0\" className=\"page-header-action\">\n            {Scope.checkScopes(['clients_users_view']) && (\n                <Button\n                    size=\"medium\"\n                    className=\"minimum-mr\"\n                    type=\"primary\"\n                    danger={true}\n                    onClick={() => downloadUsers()}\n                >\n                    <FeatherIcon icon=\"download\" size={14} />\n                    Download\n                </Button>\n            )}\n        </div>,\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['clients_users_view']) && (\n                <Button\n                    size=\"medium\"\n                    className=\"minimum-mr\"\n                    type=\"secondary\"\n                    onClick={() => setState({ ...state, filterVisible: true })}\n                >\n                    <FeatherIcon icon=\"filter\" size={14} />\n                    Filters\n                </Button>\n            )}\n        </div>,\n        <div key=\"2\" className=\"page-header-action\">\n            {Scope.checkScopes(['clients_users_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14} />\n                    Add New\n                </Button>\n            )}\n        </div>\n    ]\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Users\"\n                subTitle={`List of all ${users?.total} Users.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={users.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: users.total,\n                        current: users.page,\n                        onChange: async (pageNo, perPageNo) => await setFilters({ ...filters, page: pageNo, perPage: perPageNo })\n                    }}\n                />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default UserList;\n","import React from \"react\";\nimport { Button } from \"../../../components/buttons/buttons\";\nimport { Col, Form, Input, Modal, Row, Select } from \"antd\";\nimport { useDispatch } from \"react-redux\";\n\nconst UsersFilter = (\n    {\n        filter,\n        state,\n        setState,\n        initialFilters,\n        filters,\n        setFilters,\n        isLoading\n    }\n) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 } }\n    const validateMessages = { required: '${label} is required!' };\n\n    const handleSubmit = async (data) => {\n        await setFilters({\n            ...filters,\n            ...data,\n            name: data.name.toString(),\n            phone: data.number.toString(),\n            email: data.email.toString(),\n            gender: data.gender.toString(),\n        })\n        await setState({ ...state, filterVisible: false })\n    };\n\n    const resetFilters = async () => {\n        await setFilters(initialFilters);\n        await filter.resetFields();\n    }\n\n    const footerButtons = [\n        <Button\n            key=\"reset-button\"\n            htmlType=\"button\"\n            type=\"secondary\"\n            disabled={isLoading}\n            size=\"medium\"\n            onClick={resetFilters}\n        >\n            {isLoading ? 'Loading...' : 'Reset'}\n        </Button>,\n        <Button\n            form=\"usersFilterForm\"\n            key=\"submit-button\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return (\n        <Col md={12}>\n            <Modal\n                type={\"primary\"}\n                title=\"Users Filter\"\n                visible={state.filterVisible}\n                onCancel={() => setState({ ...state, filterVisible: false })}\n                footer={footerButtons}\n                width={800}\n            >\n                <Form\n                    {...layout}\n                    name={'usersFilter'}\n                    form={filter}\n                    id={'usersFilterForm'}\n                    className=\"my-form\"\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <Row>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"name\"\n                                initialValue={filters?.name ? filters.name : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Name\"\n                            >\n                                <Input placeholder=\"Name\" />\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"email\"\n                                initialValue={filters?.email ? filters.email : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Email\"\n                            >\n                                <Input placeholder=\"Email\" />\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"number\"\n                                initialValue={filters?.phone ? filters.phone : ''}\n                                rules={[{ required: false }]}\n                                label=\"Mobile Number\"\n                            >\n                                <Input placeholder=\"Mobile Number\" />\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"gender\"\n                                initialValue={filters?.gender ? filters.gender : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Gender\"\n                            >\n                                <Select\n                                    allowClear\n                                    loading={isLoading}\n                                    initialValue={filters?.gender ? filters.gender : \"\"}\n                                >\n                                    <Select.Option value=\"\">Gender</Select.Option>\n                                    <Select.Option value=\"male\">Male</Select.Option>\n                                    <Select.Option value=\"female\">Female</Select.Option>\n                                    <Select.Option value=\"other\">Other</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"createdDateFrom\"\n                                rules={[{ required: false }]}\n                                initialValue={filters?.createdDateFrom ? filters.createdDateFrom : null}\n                                label=\"User Created Date From\"\n                            >\n                                <Input type={\"date\"} placeholder=\"User Created Date From\" />\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"createdDateTo\"\n                                rules={[{ required: false }]}\n                                initialValue={filters?.createdDateTo ? filters.createdDateTo : null}\n                                label=\"Created To\"\n                            >\n                                <Input type={\"date\"} placeholder=\"Created To\" />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </Col>\n    )\n}\n\nexport default UsersFilter;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Main } from \"../../styled\";\nimport UserList from \"./list\";\nimport { fetchUsers, addUser, resetUserForm, travelerRequest, partnerRequest, fetchUsersToDownload } from \"../../../redux/clients/users/actionCreator\";\nimport { Form } from \"antd\";\nimport UserForm from \"./form\";\nimport {\n    fetchCountries as utilitiesCountries,\n    fetchUsers as fetchUtilitiesUsers,\n} from \"../../../redux/utilities/actionCreator\";\nimport ServicesReqForm from \"./servicerReqForm\";\nimport UsersFilter from \"./filter\";\nimport { exportToCsv } from \"../../../utility/utility\";\n\nconst UsersData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const users = useSelector(state => state.clientsUsers.users);\n    const utilitiesUsers = useSelector(state => state.utilities.users);\n    const countries = useSelector(state => state.utilities.countries);\n    const getUsers = async (page, perPage) => await dispatch(fetchUsers({ page, perPage }));\n\n    const [form] = Form.useForm()\n    const [filter] = Form.useForm()\n    const [state, setState] = useState({\n        visible: false,\n        reqModalVisible: false,\n        showFilter: false,\n        modalType: 'primary',\n        user: null,\n    });\n\n    const initialFilters = {\n        page: 1,\n        perPage: 10,\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        gender: \"\",\n        createdDateFrom: \"\",\n        createdDateTo: \"\",\n    }\n\n    const [filters, setFilters] = useState(initialFilters);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchUsers(filters))\n        };\n        fetchData().then(r => { });\n    }, [filters]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(utilitiesCountries())\n        };\n        fetchData().then(r => { });\n    }, [dispatch]);\n\n    const showModal = async (type) => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: type,\n        });\n        await dispatch(resetUserForm());\n        await form.resetFields();\n    };\n\n    const showServiceReqModal = async (type, user) => {\n        await setState({\n            ...state,\n            reqModalVisible: true,\n            modalType: type,\n            user: user,\n        });\n        await form.resetFields();\n    }\n\n    const handleOk = () => {\n        setState({\n            ...state,\n            visible: false,\n            reqModalVisible: false,\n        });\n    };\n\n    const downloadUsers = async () => {\n        await dispatch(fetchUsersToDownload(filters, (data) => exportToCsv(\"users.csv\", data)))\n    }\n\n    return (\n        <Main>\n            <UserList\n                state={state}\n                setState={setState}\n                isLoading={isLoading}\n                filters={filters}\n                setFilters={setFilters}\n                users={users}\n                getUsers={getUsers}\n                showModal={showModal}\n                showServiceReqModal={showServiceReqModal}\n                downloadUsers={downloadUsers}\n            />\n            <UsersFilter\n                filter={filter}\n                state={state}\n                setState={setState}\n                initialFilters={initialFilters}\n                filters={filters}\n                setFilters={setFilters}\n                users={utilitiesUsers}\n                fetchUsers={fetchUtilitiesUsers}\n                isLoading={isLoading}\n            />\n            <UserForm\n                countries={countries}\n                addUser={addUser}\n                state={state}\n                isLoading={isLoading}\n                form={form}\n                handleOk={handleOk}\n            />\n            <ServicesReqForm\n                state={state}\n                setState={setState}\n                isLoading={isLoading}\n                form={form}\n                travelerRequest={travelerRequest}\n                partnerRequest={partnerRequest}\n                handleOk={handleOk}\n            />\n        </Main>\n    )\n}\n\nexport default UsersData;\n","const shortDate = (date) => {\n    return (new Date(date)).toLocaleString('en-BD', {year: 'numeric', month: 'short', day: 'numeric'})\n}\n\nconst shortDateWithTime = (date) => {\n    if (!date) return 'N/A'\n    return (new Date(date)).toLocaleString('en-BD', {dateStyle: 'medium'}) + ' ' + (new Date(date)).toLocaleString('en-BD', {timeStyle: 'short'})\n}\n\nconst minuteToHours = (minute) => {\n    if (!minute) return 'N/A'\n    return (minute / 60).toFixed(1) + ' hr'\n}\n\nmodule.exports = {shortDate, minuteToHours, shortDateWithTime}","/**\n * Return ellipsis of a given string\n * @param {string} text\n * @param {number} size\n */\nconst ellipsis = (text, size) => {\n  return `${text\n    .split(' ')\n    .slice(0, size)\n    .join(' ')}...`;\n};\n\nconst isJsonString = (str) => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\nconst exportToCsv = (filename, rows) => {\n  let processRow = function (row) {\n      let finalVal = '';\n      for (let j = 0; j < row.length; j++) {\n          let innerValue = row[j] === null ? '' : row[j].toString();\n          if (row[j] instanceof Date) {\n              innerValue = row[j].toLocaleString();\n          }\n          let result = innerValue.replace(/\"/g, '\"\"');\n          if (result.search(/(\"|,|\\n)/g) >= 0)\n              result = '\"' + result + '\"';\n          if (j > 0)\n              finalVal += ',';\n          finalVal += result;\n      }\n      return finalVal + '\\n';\n  };\n\n  let csvFile = '';\n  for (let i = 0; i < rows.length; i++) {\n      csvFile += processRow(rows[i]);\n  }\n\n  let blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) { // IE 10+\n      navigator.msSaveBlob(blob, filename);\n  } else {\n      let link = document.createElement(\"a\");\n      if (link.download !== undefined) { // feature detection\n          // Browsers that support HTML5 download attribute\n          let url = URL.createObjectURL(blob);\n          link.setAttribute(\"href\", url);\n          link.setAttribute(\"download\", filename);\n          link.style.visibility = 'hidden';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n      }\n  }\n}\n\nconst phoneFormatted = (phone) => {\n  if (!phone.includes(\"@\")) {\n      if (phone.startsWith(\"0\")) {\n      phone = phone.slice(1)\n      }\n      if (phone.startsWith(\"+880\")) {\n          phone = phone.slice(4)\n      }\n      if (phone.includes(\"-\")) {\n          phone = phone.replace(/-/g, \"\");\n      }\n      if (phone.includes(\" \") && parseInt(phone) > 100) {\n          phone = phone.replace(/ /g, \"\");\n      }\n  }\n  return phone\n}\n\nexport { ellipsis, isJsonString, exportToCsv, phoneFormatted };\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchTravelersAction } = actions;\n\nexport const fetchTravelers = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'travelers',\n            queries,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchTravelersAction(cb)))\n    };\n};\n\nexport const approveRequest = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: Constants.CLIENTS + 'travelers/approve',\n            auth: 'bearer',\n            body: data\n        }, async (cb) => dispatch(fetchTravelers({page: 1, perPage: 10})))\n    };\n};\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchPartnersAction } = actions;\n\nexport const fetchPartners = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'partners',\n            queries,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchPartnersAction(cb)))\n    };\n};\n\nexport const approveRequest = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: Constants.CLIENTS + 'partners/approve',\n            auth: 'bearer',\n            body: data\n        }, async (cb) => dispatch(fetchPartners({page: 1, perPage: 10})))\n    };\n};\n"],"sourceRoot":""}