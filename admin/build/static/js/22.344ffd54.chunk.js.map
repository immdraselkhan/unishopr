{"version":3,"sources":["components/charts/useChartData.js","components/utilities/utilities.js","container/dashboard/style.js","components/charts/chartjs.js","redux/dashboard/actionCreator.js","container/dashboard/index.js","components/cards/frame/style.js","components/dropdown/dropdown-style.js","components/dropdown/dropdown.js","components/cards/frame/cards-frame.js"],"names":["require","customTooltips","useRef","useState","useEffect","tooltip","tooltipEl","document","querySelector","this","_chart","canvas","closest","contains","createElement","className","innerHTML","querySelectorAll","forEach","el","remove","appendChild","opacity","classList","yAlign","add","body","titleLines","title","bodyLines","map","bodyItem","lines","innerHtml","i","colors","labelColors","style","backgroundColor","borderColor","span","positionY","offsetTop","positionX","offsetLeft","toolTipHeight","clientHeight","left","caretX","top","caretY","fontFamily","_bodyFontFamily","fontSize","bodyFontSize","fontStyle","_bodyFontStyle","padding","yPadding","xPadding","EChartCard","Styled","div","CardBarChart2","theme","rtl","topMenu","ChartContainer","ChartjsBarChartTransparent","props","labels","datasets","options","height","layout","data","window","innerWidth","tooltips","mode","intersect","position","enabled","custom","callbacks","label","t","d","dstLabel","datasetIndex","yLabel","labelColor","tooltipItem","chart","config","hoverBackgroundColor","usePointStyle","defaultProps","maintainAspectRatio","responsive","legend","display","align","boxWidth","right","bottom","scales","yAxes","gridLines","color","ticks","beginAtZero","fontColor","max","stepSize","callback","value","index","values","xAxes","barPercentage","fetchUsersStatsAction","actions","fetchPurchasesStatsAction","fetchRevenueStatsAction","fetchUsersStats","dispatch","req","getRequest","url","Constants","DASHBOARD","auth","cb","fetchPurchasesStats","fetchRevenueStats","chartOptions","stacked","Dashboard","useDispatch","usersStats","useSelector","state","dashboard","purchasesStats","revenueStats","fetchData","then","r","getStatMonthNames","stats","arr","push","month","_id","year","getStatMonthValues","count","marginTop","gutter","xxl","md","sm","xs","headless","as","total","toLocaleString","icon","percentage","Number","toFixed","getRevenueValues","CardFrame","isbutton","BtnWraper","bodypadding","Content","DropdownStyle","Dropdown","content","placement","action","children","overlayClassName","overlay","trigger","to","Cards","more","moreText","size","caption","bodyStyle","headStyle","border","width","bordered","extra"],"mappings":"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","file":"static/js/22.344ffd54.chunk.js","sourcesContent":["const { useRef, useState } = require('react');\nconst { useEffect } = require('react');\n\nconst useChartData = () => {\n  const [chartData, setChartData] = useState({});\n  const ref = useRef();\n\n  useEffect(() => {\n    if (ref.current) {\n      const { data } = ref.current.chartInstance;\n      setChartData(data);\n    }\n  }, []);\n\n  return { ref, chartData };\n};\n\nexport default useChartData;\n","const textRefactor = (text, size) => {\n  return `${text\n    .split(' ')\n    .slice(0, size)\n    .join(' ')}...`;\n};\n\nconst chartLinearGradient = (canvas, height, color) => {\n  const ctx = canvas.getContext('2d');\n  const gradient = ctx.createLinearGradient(0, 0, 0, height);\n  gradient.addColorStop(0, `${color.start}`);\n  gradient.addColorStop(1, `${color.end}`);\n  return gradient;\n};\n\n// Custom Tooltip\nconst customTooltips = function(tooltip) {\n  // Tooltip Element\n  let tooltipEl = document.querySelector('.chartjs-tooltip');\n\n  if (!this._chart.canvas.closest('.parentContainer').contains(tooltipEl)) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.className = 'chartjs-tooltip';\n    tooltipEl.innerHTML = '<table></table>';\n\n    document.querySelectorAll('.parentContainer').forEach(el => {\n      if (el.contains(document.querySelector('.chartjs-tooltip'))) {\n        document.querySelector('.chartjs-tooltip').remove();\n      }\n    });\n\n    this._chart.canvas.closest('.parentContainer').appendChild(tooltipEl);\n  }\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set caret Position\n  tooltipEl.classList.remove('above', 'below', 'no-transform');\n  if (tooltip.yAlign) {\n    tooltipEl.classList.add(tooltip.yAlign);\n  } else {\n    tooltipEl.classList.add('no-transform');\n  }\n\n  function getBody(bodyItem) {\n    return bodyItem.lines;\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const bodyLines = tooltip.body.map(getBody);\n\n    let innerHtml = '<thead>';\n\n    titleLines.forEach(function(title) {\n      innerHtml += `<div class='tooltip-title'>${title}</div>`;\n    });\n    innerHtml += '</thead><tbody>';\n\n    bodyLines.forEach(function(body, i) {\n      const colors = tooltip.labelColors[i];\n      let style = `background:${colors.backgroundColor}`;\n      style += `; border-color:${colors.borderColor}`;\n      style += '; border-width: 2px';\n      style += '; border-radius: 30px';\n      const span = `<span class=\"chartjs-tooltip-key\" style=\"${style}\"></span>`;\n      innerHtml += `<tr><td>${span}${body}</td></tr>`;\n    });\n\n    innerHtml += '</tbody>';\n\n    const tableRoot = tooltipEl.querySelector('table');\n    tableRoot.innerHTML = innerHtml;\n  }\n\n  const positionY = this._chart.canvas.offsetTop;\n  const positionX = this._chart.canvas.offsetLeft;\n  const toolTip = document.querySelector('.chartjs-tooltip');\n  const toolTipHeight = toolTip.clientHeight;\n\n  // Display, position, and set styles for font\n\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = `${positionX + tooltip.caretX}px`;\n  tooltipEl.style.top = `${positionY +\n    tooltip.caretY -\n    (tooltip.caretY > 10 ? (toolTipHeight > 100 ? toolTipHeight + 5 : toolTipHeight + 15) : 70)}px`;\n  tooltipEl.style.fontFamily = tooltip._bodyFontFamily;\n  tooltipEl.style.fontSize = `${tooltip.bodyFontSize}px`;\n  tooltipEl.style.fontStyle = tooltip._bodyFontStyle;\n  tooltipEl.style.padding = `${tooltip.yPadding}px ${tooltip.xPadding}px`;\n};\n\nexport { textRefactor, chartLinearGradient, customTooltips };\n","import Styled from 'styled-components';\n\nconst EChartCard = Styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: flex-end;\n    .card-chunk{\n        width: 50%;\n        flex: 0 0 50%;\n    }\n    @media only screen and (max-width: 379px){\n        .card-chunk{\n            width: 100%;\n            flex: 0 0 100%;\n            h1{\n                margin-bottom: 0;\n            }\n            p{\n                margin: 5px 0 20px 0;\n            }\n        }\n    }\n    .chartjs-tooltip {\n        min-width: 132px !important;\n    }\n`;\nconst DashboardBaseStyleWrap = Styled.div`\n    h1{\n        margin-bottom: 30px;\n    }\n    .ant-row{\n        margin: -5px 0;\n    }\n    .ant-col{\n        margin: 5px 0;\n    }\n`;\n\nconst Focard = Styled.div`\n    canvas{\n        width: 100% !important;\n        margin-top: 50px;\n        @media only screen and (max-width: 1199px){\n            margin-top: 15px;\n        }\n    }\n    .focard-details{\n        &.growth-downward{\n            h1{                \n                font-size: 30px;\n                @media only screen and (max-width: 767px){\n                    font-size: 24px;\n                }\n            }\n            .focard-status{\n                .focard-status__percentage{\n                    color: ${({ theme }) => theme['danger-color']};\n                    font-size: 16px;\n                }\n            }\n        }\n        &.growth-upward{\n            .focard-status{\n                .focard-status__percentage{\n                    color: ${({ theme }) => theme['success-color']};\n                    font-size: 16px;\n                }\n            }\n        }\n        h1{\n            font-weight: 600;\n            margin-bottom: 2px;\n        }\n        .subtitle{\n            font-size: 14px;\n            color: #868EAE;\n            margin-bottom: 10px;\n        }\n        .focard-status{\n            display: flex;\n            flex-wrap: wrap;\n            align-items: center;\n            margin: 0 -5px;\n            span{\n                display: inline-flex;\n                align-items: center;\n                margin: 0 5px;\n                &.focard-status__percentage{\n                    font-weight: 500;\n                }\n            }\n            span + span{\n                color: #868EAE;\n                font-size: 13px;\n            }\n        }\n        svg{\n            width: 15px;\n            ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 10px;\n        }\n    }\n\n    .focard-chart{\n        ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: -10px;\n    }\n\n    @media (max-width: 1300px){\n        .focard-details{\n            h1{\n                font-size: 24px;\n            }\n            &.growth-downward{\n                h1{\n                    font-size: 24px;\n                }\n            }\n        }\n    }\n\n    .forcast-card-box{\n        .ant-card-body{\n            padding: 0 !important;\n            h1{\n                padding: ${({ theme }) => (theme.rtl ? '25px 25px 0 0' : '25px 0 0 25px')};\n                font-size: 16px;\n                font-weight: 500;\n                margin-bottom: 26px;\n                @media only screen and (max-width: 767px){\n                    margin-bottom: 16px;\n                }\n            }\n        }\n\n        .focard-details{\n            margin-top: 15px;\n            padding: 0 25px 22px;\n            @media only screen and (max-width: 767px){\n                padding: 0 25px 0;\n            }\n            h1{\n                padding: 0;\n                font-size: 30px;\n                font-weight: 600;\n                margin-bottom: 4px;\n                @media only screen and (max-width: 767px){\n                    font-size: 24px;\n                }\n            }\n            p{\n                margin-bottom: 0;\n            }\n        }\n        canvas{\n            margin-top: 0px;\n            border-radius: 0 0 10px 10px;\n        }\n        .chart-label{\n            display: none;\n        }\n    }\n`;\n\nconst CardBarChart = Styled.div`\n    >div{\n        @media only screen and (max-width: 575px) {\n            flex-flow: column;\n            align-items: flex-start !important;\n            ul{\n                margin: 0 0 15px;\n            }\n        }\n    }\n    .card-bar-top{\n        &.flex-grid{\n            ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: -20px;\n            @media only screen and (max-width: 575px) {\n                flex-flow: column;\n                align-items: center;\n                text-align: center;\n            }\n            h1{\n                font-size: 24px;\n                margin-bottom: 22px;\n                @media only screen and (max-width: 1199px) {\n                    font-size: 20px;\n                }\n            }\n        }\n        .flex-grid-child{\n            padding: 0 20px;\n        }\n        p{\n            font-size: 14px;\n            margin-bottom: 8px;\n            color: ${({ theme }) => theme['light-color']};\n        }\n        h1{\n            margin-bottom: 18px;\n            sub{\n                bottom: 0;\n                font-size: 14px;\n                ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: 8px;\n                color: ${({ theme }) => theme['success-color']};\n                svg{\n                    ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 4px;\n                }\n            }\n        }\n    }\n    ul{\n        margin-top: 15px;\n    }\n    .chart-dataIndicator{\n        li{\n            font-size: 13px;\n            color: ${({ theme }) => theme['gray-color']};\n            &:not(:last-child){\n                ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 16px;\n            }\n        }\n    }\n    .chartjs-tooltip{\n        min-width: 140px !important;\n        @media only screen and (max-width: 1199px){\n            min-width: 115px !important;\n        }\n    }\n`;\n\nconst CardGroup = Styled.div`\n    .forcast-overview{\n        .ant-card-body{\n            padding: 0 24px !important;\n            @media only screen and (max-width: 1199px){\n                padding: 24px 24px 0 24px !important;\n            }\n        }\n    }\n    .card-radio{\n        .ant-radio-button-wrapper{\n            height: 30px;\n            line-height: 28px;\n            font-size: 12px;\n            font-weight: 500;\n            padding: 0 10.5px;\n            color: ${({ theme }) => theme['gray-color']};\n            border-color: ${({ theme }) => theme['border-color-light']};\n            &:before{\n                display: none;\n            }\n            &:focus-within{\n                box-shadow: 0 0;\n            }\n            &:first-child{\n                border-radius: 3px 0 0 3px;\n            }\n            &:last-child{\n                border-radius: 0 3px 3px 0;\n            }\n            &.ant-radio-button-wrapper-checked{\n                color: #fff !important;\n                background: ${({ theme }) => theme['primary-color']} !important;\n                &:hover{\n                    color: #fff !important;\n                    background: ${({ theme }) => theme['primary-color']} !important;\n                }\n            }\n            &:hover{\n                background: ${({ theme }) => theme['bg-color-normal']} !important;\n            }\n        }\n    }\n    .focard-wrapper{\n        margin: 0 -12px;\n        ${({ theme }) => (theme.rtl ? 'padding: 24px 24px 25px 0;' : 'padding: 24px 0 25px 24px;')};\n        ${({ theme }) => (theme.topMenu ? 'padding-bottom: 0px' : 'padding-bottom: 25px')};\n        \n        @media only screen and (max-width: 1350px){\n            padding: 24px 0 25px 10px;\n        }\n        @media only screen and (max-width: 1199px){\n            margin: 0;\n        }\n        .ant-col-md-12{\n            ${({ theme }) => (theme.rtl ? 'padding: 0 12px 0 18px;' : 'padding: 0 18px 0 12px;')}\n            \n            @media only screen and (max-width: 1350px){\n                ${({ theme }) => (theme.rtl ? 'padding: 0 6px 0 14px;' : 'padding: 0 14px 0 6px;')}                \n            }\n            @media only screen and (max-width: 575px){\n                &:not(:last-child){\n                    margin-bottom: 20px;\n                }\n            }\n            &:first-child{\n                @media only screen and (max-width: 1350px){\n                    ${({ theme }) => (!theme.rtl ? 'padding-left' : 'padding-right')}: 20px;\n                }\n                @media only screen and (max-width: 1199px){\n                    padding: ${({ theme }) => (theme.rtl ? '0 0 0 12px' : '0 12px 0 0')};\n                    @media only screen and (max-width: 575px){\n                        padding: 0;\n                    }\n                }\n            }\n            &:last-child{\n                padding: 0 14px 0 18px;\n                @media only screen and (max-width: 1350px){\n                    &:last-child{\n                        padding: 0 10px 0 14px;\n                    }\n                }\n                @media only screen and (max-width: 1199px){\n                    &:last-child{\n                        padding: 0 0 0 12px;\n                        @media only screen and (max-width: 575px){\n                            padding: 0;\n                        }\n                    }\n                }\n            }\n        }\n\n        &.focard-divider{\n            ${({ theme }) => (!theme.rtl ? 'padding-left' : 'padding-right')}: 0;\n            ${({ theme }) => (theme.rtl ? 'padding-left' : 'padding-right')}: 15px;\n            ${({ theme }) => (!theme.rtl ? 'border-right' : 'border-left')}: 1px solid ${({ theme }) =>\n  theme['border-color-light']} !important;\n            @media only screen and (max-width: 1199px){\n                ${({ theme }) => (theme.rtl ? 'padding-left' : 'padding-right')}: 0 none !important;\n                padding: ${({ theme }) => (theme.rtl ? '0 10px 0 0' : '0 0 0 10px')};\n            }\n            .ant-col-md-12{\n                &:first-child{\n                    padding: 0 16px 0 24px;\n                    @media only screen and (max-width: 1350px){\n                        padding: ${({ theme }) => (theme.rtl ? '0 20px 0 10px' : '0 10px 0 20px')};\n                    }\n                    @media only screen and (max-width: 1199px){\n                        padding: ${({ theme }) => (theme.rtl ? '0 0 0 12px' : '0 12px 0 0')};\n                    }\n                    @media only screen and (max-width: 575px){\n                        padding: 0;\n                    }\n                }\n                &:last-child{\n                    padding: ${({ theme }) => (theme.rtl ? '0 18px 0 10px' : '0 10px 0 18px')};\n                    @media only screen and (max-width: 1350px){\n                        padding: ${({ theme }) => (theme.rtl ? '0 20px 0 4px' : '0 4px 0 20px')};\n                    }\n                    @media only screen and (max-width: 1199px){\n                        padding: ${({ theme }) => (theme.rtl ? '0 12px 0 0px' : '0 0 0 12px')};\n                    }\n                    @media only screen and (max-width: 575px){\n                        padding: 0;\n                    }\n                }\n            }\n        }\n    }\n\n    .traffic-table{\n        min-height: 438px;\n        .ant-table{\n            border-radius: 10px;\n        }\n        table{\n            color: #333;\n            thead{\n                th{\n                    background-color: ${({ theme }) => theme['bg-color-light']};\n                    padding: 11.5px 16px;\n                    &:nth-child(2){\n                        border-left: 1px solid ${({ theme }) => theme['border-color-light']};\n                    }\n                    &:nth-child(4){\n                        border-right: 1px solid ${({ theme }) => theme['border-color-light']};\n                    }\n                }\n            }\n            tbody{\n                tr{\n                    &:hover{\n                        td{\n                            background: ${({ theme }) => theme['bg-color-light']};\n                            .social-name{\n                                color: ${({ theme }) => theme['primary-color']};\n                            }\n                        }\n                    }\n                }\n                td{\n                    padding: 14.5px 15px;\n                    text-align: ${({ theme }) => (theme.rtl ? 'left' : 'right')};;\n                    ${({ theme }) => (theme.rtl ? 'border-left' : 'border-right')};: 1px solid ${({ theme }) =>\n  theme['border-color-light']};\n                    color: ${({ theme }) => theme['gray-color']};\n                    &:first-child{\n                        ${({ theme }) => (!theme.rtl ? 'border-left' : 'border-right')};: 0 none;\n                        text-align: ${({ theme }) => (!theme.rtl ? 'left' : 'right')};;\n                        ${({ theme }) => (!theme.rtl ? 'padding-left' : 'padding-right')};: 25px;\n                    }\n                    &:last-child{\n                        ${({ theme }) => (theme.rtl ? 'border-left' : 'border-right')};: 0 none;\n                        ${({ theme }) => (theme.rtl ? 'padding-left' : 'padding-right')};: 25px;\n                    }\n                    .traffic-title{\n                        font-weight: 500;\n                        color: ${({ theme }) => theme['dark-color']};\n                    }\n                    .social-name{\n                        color: ${({ theme }) => theme['info-color']};\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst ExList = Styled.div`\n    padding: 25px 0 0;\n    height: 100%;\n    ${({ theme }) => (theme.rtl ? 'border-left' : 'border-right')}: 1px solid ${({ theme }) =>\n  theme['border-color-light']};\n    @media only screen and (max-width: 1599px){\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        ${({ theme }) => (theme.rtl ? 'border-left' : 'border-right')}: 0 none;\n        margin: 0 -15px;\n        padding: 15px 0 0;\n\n    }\n    div{\n        margin-bottom: 25px;\n        @media only screen and (max-width: 1599px){\n            flex: 0 0 25%;\n            padding: 15px;\n            margin-bottom: 10px;\n        }\n        @media only screen and (max-width: 1199px){\n            flex: 0 0 50%;\n            padding: 5px 15px;\n            margin-bottom: 5px;\n        }\n        @media only screen and (max-width: 575px){\n            flex: 0 0 100%;\n            text-align: center;\n        }\n        p{\n            font-size: 14px;\n            color: ${({ theme }) => theme['light-gray-color']};\n            margin-bottom:0;\n        }\n        h1{\n            font-size: 22px;\n            font-weight: 600;\n            margin-bottom: 0;\n            @media only screen and (max-width: 991px){\n                font-size: 20px;\n            }\n            & > span{\n                ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 10px;\n                @media only screen and (max-width: 1599px){\n                    display: block;\n                }\n            }\n            sub{\n                font-size: 13px;\n                font-weight: 400;\n                display: inline-flex;\n                align-items: center;\n                line-height: normal;\n                color: ${({ theme }) => theme['light-color']};\n                span{\n                    display: inline-flex;\n                    align-items: center;\n                    color: ${({ theme }) => theme['success-color']};\n                    padding: ${({ theme }) => (theme.rtl ? '0 0 0 10px' : '0 10px 0 0')};\n                }\n                svg{\n                    width:12px;\n                }\n                &.growth-downward{\n                    span{\n                        color: ${({ theme }) => theme['danger-color']};\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst OverviewCard = Styled.div`\n    background: #fff;\n    border-radius: 10px;\n    padding: 25px 25px 20px;\n    overflow: hidden;\n    position: relative;\n    z-index: 0;\n    margin-bottom: 30px;\n    ${({ theme }) => (theme.topMenu ? 'min-height: 595px' : 'min-height: auto')};\n    @media only screen and (max-width: 991px){\n        min-height: auto;\n    }\n    &:before{\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: 215px;\n        background:linear-gradient(45deg, ${({ theme }) => theme['secondary-color']}, ${({ theme }) =>\n  theme['warning-color']});\n  ${({ theme }) => (theme.rtl ? 'right' : 'left')}:0;\n        top: 0;\n        z-index:-1;\n    }\n    .overview-box{\n        .ant-card-body{\n            padding: 22px 25px 14px !important;\n        }\n        .ant-progress{\n            margin-bottom: 15px;\n        }\n        .ant-progress-bg{\n            height: 6px !important;\n        }\n        .overview-box-single{\n            h1{\n                margin-bottom: 0;\n            }\n            p{\n                color: ${({ theme }) => theme['light-color']};\n            }\n        }\n        .growth-downward,\n        .growth-upward{\n            span{\n                ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: 6px;\n            }\n        }\n        .overview-box-percentage{\n            font-weight: 500;\n        }\n    }\n    .ant-card{\n        box-shadow: 0 10px 30px rgba(146,153,184,0.15);\n        .growth-upward{\n            color: ${({ theme }) => theme['success-color']};\n            font-weight: 600;\n            display: inline-flex;\n            align-items: center;\n            span{\n                color: ${({ theme }) => theme['light-gray-color']};\n                font-weight: 400;\n                font-size: 13px;\n            }\n        }\n        .growth-downward{\n            color: ${({ theme }) => theme['danger-color']};\n            font-weight: 600;\n            display: inline-flex;\n            align-items: center;\n            span{\n                color: ${({ theme }) => theme['light-gray-color']};\n                font-weight: 400;\n                font-size: 13px;\n            }\n        }\n    }\n    .overview-head{\n        margin-bottom: 70px;\n        h1{\n            font-size: 16px;\n            font-weight: 500;\n            color: #fff;\n        }\n        .ant-btn-default{\n            font-size: 12px;\n            background: rgba(255,255,255,0.1);\n            padding: 0px 11px;\n            border: 0 none;\n            color: #fff;\n            svg,\n            img,\n            i{\n                ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: 8px;\n            }\n        }\n    }\n`;\n\nconst PerformanceChartWrapper = Styled.div`\n    .performance-lineChart{\n        margin-top: 20px;\n        .chart-label{\n            display: none;\n        }\n        ul{\n            margin-top: 16px;\n            li{\n                &:not(:last-child){\n                    ${({ theme }) => (!theme.rtl ? 'margin-right' : 'margin-left')}: 25px;\n                }\n            }\n        }\n    }\n    .chartjs-tooltip{\n        min-width: 175px !important;\n        @media only screen and (max-width: 767px){\n            min-width: 150px !important;\n        }\n    }\n`;\n\nconst Pstates = Styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    margin: -24px 0 25px;\n    @media only screen and (max-width: 767px){\n        margin: -19px 0 25px;\n        flex-flow: column;\n    }\n    >div{\n        transition: 0.3s ease;\n        padding: 20px;\n        @media only screen and (max-width: 1599px){\n            flex: 0 0 50%;\n        }\n        &:hover{\n            box-shadow: 0 15px 30px rgba(146,153,184,0.15);\n            p{\n                font-weight: 500;\n                color: ${({ theme }) => theme['primary-color']};\n            }\n        }\n        &.active{\n            background: ${({ theme }) => theme['bg-color-light']};\n            &:hover{\n                box-shadow: 0 15px 30px #fff;\n            }\n        }\n    }\n    .growth-upward,\n    .growth-downward{\n        cursor: pointer;\n        &:focus{\n            outline: none\n        }\n        h1{\n            font-size: 24px;\n            sub{\n                span{\n                    font-weight: 500;\n                }\n            }\n        }\n    }\n`;\n\nconst SessionChartWrapper = Styled.div`\n    min-height: 510px;\n    background: #fff;\n    border-radius: 10px;\n    @media only screen and (max-width: 1599px){\n        min-height: 440px;\n    }\n    @media only screen and (max-width: 991px){\n        min-height: auto;\n    }\n    .session-chart-inner{\n        ul{\n            display: flex;\n            max-width: 365px;\n            margin: 40px auto 6px auto;\n            li{\n                width: 33.33%;\n                text-align: center;\n                position: relative;\n                .doughnutLabelColor{\n                    position: absolute;\n                    display: block;\n                    height: 8px;\n                    width: 8px;\n                    border-radius: 50%;\n                    top: 50%;\n                    transform: translateY(-50%);\n                    ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 14px;\n                    @media only screen and (max-width: 1400px){\n                        ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 5px;\n                    }\n                    @media only screen and (max-width: 1300px){\n                        ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 0;\n                    }\n                    @media only screen and (max-width: 1199px){\n                        ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 15px;\n                    }\n                    @media only screen and (max-width: 379px){\n                        ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 0;\n                    }\n                }\n                .doughnutLabe{\n                    color: ${({ theme }) => theme['gray-color']};\n                }\n            }\n        }\n        p{\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            text-align: center;\n            width: 200px;\n            margin-bottom: 0;\n            display: inline-block;\n            transform: translate(-50%, -50%);\n            span{\n                font-size: 24px;\n                display: block;\n                font-weight: 600;\n            }\n        }\n    }\n`;\n\nconst SessionState = Styled.div`\n    /* // margin: 0 0 15px -15px; */\n    max-width: 365px;\n    margin: 42px auto auto;\n    >div{\n        width: 33.33%;\n        text-align: center;\n        span{\n            font-size: 18px;\n            font-weight: 600;\n            display: inline-block;\n            @media only screen and (max-width: 1300px){\n                display: block;\n            }\n            @media only screen and (max-width: 1199px){\n                display: inline-block;\n            }\n            @media only screen and (max-width: 379px){\n                display: block;\n            }\n        }\n        sub{\n            bottom: 0;\n            ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 5px;\n            font-size: 13px;\n            color: ${({ theme }) => theme['light-gray-color']};\n        }\n    }\n\n    .session-single{\n        text-align: center;\n    }\n`;\n\nconst RegionList = Styled.div`\n    max-height: 300px;\n    overflow: hidden auto;\n    border: 1px solid ${({ theme }) => theme['border-color-light']};\n    table{\n        tr{\n            &:first-child{\n                td{\n                    padding-top: 15px;\n                }\n            }\n            &:last-child{\n                td{\n                    padding-bottom: 15px;\n                }\n            }\n            th{\n                font-size: 13px;\n                font-weight: 500;\n                color: ${({ theme }) => theme['dark-color']};\n                background: ${({ theme }) => theme['bg-color-light']};\n                padding: 9px 20px;\n                border: 0 none;\n            }\n            td{\n                font-size: 13px;\n                border: 0 none;\n                padding: 6px 20px;\n                color: ${({ theme }) => theme['gray-color']};\n            }\n        }\n    }\n\n`;\n\nconst RegionMap = Styled.div`\n    text-align: center;\n    height: 100%;\n    margin-top: 25px;\n    ${({ theme }) => (theme.rtl ? 'padding-right' : 'padding-left')}: 20px;\n    >div{\n        width: 100%;\n        height: 250px;\n        @media only screen and (max-width: 479px){\n            height: 200px;\n        }\n    }\n    svg{\n        height: 230px;\n        margin: 0 auto;\n        @media only screen and (max-width: 479px){\n            height: 180px;\n        }\n    }\n`;\n\nconst LadingPages = Styled.div`\n    @media only screen and (max-width: 1599px){\n        min-height: 380px;\n    }\n    @media only screen and (max-width: 1199px){\n        min-height: 100%;\n    }\n    .ant-table-tbody{\n        .ant-table-cell{\n            white-space: normal !important;\n            @media only screen and (max-width: 991px){\n                white-space: nowrap !important;\n            }\n        }\n    }\n    table{\n        th{\n            white-space: nowrap !important;\n            text-align: ${({ theme }) => (!theme.rtl ? 'right' : 'left')} !important;\n            &:first-child{\n                text-align: ${({ theme }) => (theme.rtl ? 'right' : 'left')} !important;\n            }\n        }\n        tbody{\n            tr{\n                td{\n                    text-align: ${({ theme }) => (!theme.rtl ? 'right' : 'left')};\n                    color: ${({ theme }) => theme['gray-color']};\n                    &:first-child{\n                        text-align: ${({ theme }) => (theme.rtl ? 'right' : 'left')};\n                    }\n                    .page-title{\n                        color: ${({ theme }) => theme['primary-color']};\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst CardBarChart2 = Styled.div`\n    @media only screen and (max-width: 379px){\n        text-align: center\n    }\n    h1{\n        margin-bottom: 5px;\n    }\n    @media only screen and (max-width: 1500px){\n        h1{\n            font-size: 22px;\n        }\n    }\n    & > span{\n        font-size: 14px;\n        color: ${({ theme }) => theme['light-gray-color']};\n    }\n    p{\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        margin: 21px 0 0 0;\n        @media only screen and (max-width: 379px){\n            justify-content: center;\n        }\n        .growth-upward, .growth-downward{\n            display: inline-flex;\n            align-items: center;\n            ${({ theme }) => (!theme.rtl ? 'padding-right' : 'padding-left')}: 10px;\n            font-weight: 600;\n\n            svg{\n                width: 15px;\n            }\n        }\n        .growth-upward{\n            color: ${({ theme }) => theme['success-color']};\n            svg{\n                color: ${({ theme }) => theme['success-color']};\n            }\n        }\n        .growth-downward{\n            color: ${({ theme }) => theme['danger-color']};\n            svg{\n                color: ${({ theme }) => theme['danger-color']};\n            }\n        }\n        span{\n            color: ${({ theme }) => theme['light-gray-color']};\n            font-size: 13px;\n            display: inline-block;\n        }\n    }\n`;\n\nconst SocialMediaWrapper = Styled.div`\n    .ant-card-body{\n        padding: 12px 25px 10px !important;\n    }\n`;\n\nconst LineChartWrapper = Styled.div`\n    .linkedin-chart-wrap{\n        min-height: 388px;\n    }\n    .growth-upward,\n    .growth-downward{\n        line-height: 2.2;\n        h1{\n            margin-bottom: 0;\n            svg,\n            i,\n            img{\n                margin-right: 6px;\n            }\n        }\n    }\n    .line-chart-row{\n        &:not(:last-child){\n            margin-bottom: 24px;\n        }\n        .border-linechart{\n            border-bottom: 1px solid ${({ theme }) => theme['border-color-deep']};\n            position: relative;\n            &:before{\n                position: absolute;\n                content: '';\n                width: 10px;\n                height: 2px;\n                ${({ theme }) => (theme.rtl ? 'right' : 'left')}: 0;\n                bottom: -1px;\n                background: #fff;\n            }\n        }\n    }\n    .overview-container{\n        .line-chart-row{\n            &:not(:last-child){\n                margin-bottom: 18px;\n                ${({ theme }) => (theme.topMenu ? 'margin-bottom: 25px' : 'margin-bottom: 18px')};\n            }\n        }\n    }\n`;\n\nconst RatioCard = Styled.div`\n    >.ant-card{\n        ${({ theme }) => (theme.topMenu ? 'min-height: 225px' : 'min-height: 100%')};\n        @media only screen and (max-width: 1599px){\n            min-height: 225px;\n        }\n    }\n    .ant-card-body{\n        h1{\n            font-size: 16px;\n            font-weight: 500;\n        }\n    }\n    .ratio-content{\n        margin-top: 30px\n        @media only screen and (max-width: 767px){\n            margin-top: 25px;\n        }\n        h1{\n            margin-bottom: 2px;\n            font-size: 36px;\n            font-weight: 600;\n            @media only screen and (max-width: 767px){\n                font-size: 30px;\n            }\n        }\n        .ant-progress{\n            margin-bottom: 12px;\n            .ant-progress-bg{\n                height: 6px !important;\n            }\n            .ant-progress-text{\n                position: absolute;\n                ${({ theme }) => (theme.rtl ? 'left' : 'right')}: 0;\n                bottom: 26px;\n                font-weight: 500;\n            }\n            &.progress-success{\n                .ant-progress-text{\n                    color: ${({ theme }) => theme['success-color']};\n                }\n            }\n            &.ant-progress-status-warning{\n                .ant-progress-text{\n                    color: ${({ theme }) => theme['warning-color']};\n                }\n            }\n        }\n        p{\n            color: ${({ theme }) => theme['light-color']};\n            margin-bottom: 0;\n            strong{\n                font-size: 13px;\n                color: ${({ theme }) => theme['dark-color']};\n                font-weight: 600;\n            }\n        }\n    }\n`;\n\nconst IncomeExpenseWrapper = Styled.div`\n    .ant-card-body{\n        padding: 0 25px !important;\n    }\n    .ant-card-extra{\n        .card-nav{\n            ul{\n                padding: 0;\n                li{\n                    padding: 0;\n                }\n            }\n        }\n    }\n    canvas{\n        padding: 25px 0 0;\n        @media only screen and (max-width: 1599px){\n            padding-top: 5px;\n        }\n    }\n    .chart-dataIndicator{\n        padding: 15px 0 25px 0;\n        margin-top: 0 !important;\n    }\n    ul{\n        padding: 10px 0 20px 0;\n        margin: -5px -12px;\n        li{\n            padding: 5px 12px;\n            font-size: 13px;\n            color: ${({ theme }) => theme['light-gray-color']};\n            @media only screen and (max-width: 575px){\n                display: flex !important;\n            }\n            &:not(:last-child){\n            ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 20px;\n                @media only screen and (max-width: 575px){\n                    ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 0;\n                }\n            }\n        }\n    }\n    .chartjs-tooltip{\n        min-width: 185px !important;\n        @media only screen and (max-width: 1199px){\n            min-width: 170px !important;\n        }\n    }\n    .ant-card-extra{\n        padding: 0;\n    }\n`;\n\nconst LocationMapWrapper = Styled.div`\n    .location-map{\n        padding: 20px 0;\n        >div{\n            width: 100%;\n            height: 160px;\n        }\n        svg{\n            @media only screen and (max-width: 991px){\n               height: 100%;\n               width: auto;\n            }\n        }\n        .jvectormap-zoomin,\n        .jvectormap-zoomout{\n            ${({ theme }) => (theme.rtl ? 'left' : 'right')}: 25px;\n        }\n    }\n    .location-table{\n        margin: 0 25px 18px;\n        padding-top: 12px;\n        min-height: 180px;\n        border-top: 1px solid ${({ theme }) => theme['border-color-light']} !important;\n        table{\n            thead{\n                th{\n                    font-size: 12px;\n                    background: #fff;\n                    border: 0 none;\n                    font-weight: 400;\n                    text-transform: uppercase;\n                    color: ${({ theme }) => theme['light-color']};\n                }\n            }\n            tr{\n                &:hover{\n                    td{\n                        background: #fff;\n                    }\n                }\n                td{\n                    border: 0 none;\n                    color: ${({ theme }) => theme['gray-color']};\n                }\n                th,\n                td{\n                    padding: 7px 16px;\n                    &:first-child{\n                        padding-left: 0;\n                    }\n                    &:last-child{\n                        text-align: ${({ theme }) => (theme.rtl ? 'left' : 'right')};\n                        ${({ theme }) => (theme.rtl ? 'padding-left' : 'padding-right')}: 0;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst RevenueWrapper = Styled.div`\n\n    .chart-label{\n        justify-content: flex-start;\n        margin-bottom: 26px;\n        display: none\n    }\n\n    >.ant-card{\n        min-height: 455px;\n        @media only screen and (max-width: 1599px){\n            min-height: 100%;\n        }\n    }\n    .performance-lineChart{\n        ul{\n            margin: -25px -25px 20px;\n        }\n    }\n    .custom-label{\n        flex-direction: column;\n        align-items: flex-start;\n        margin: 25px;\n        .current-amount{\n            display: block;\n            font-size: 24px;\n            font-weight: 600;\n            color: ${({ theme }) => theme['primary-color']};\n        }\n        .prev-amount{\n            display: block;\n            font-size: 24px;\n            font-weight: 600;\n            color: ${({ theme }) => theme['dark-color']};\n        }\n        div{\n            span{\n                display: inline-block;\n            }\n        }\n    }\n\n    .chartjs-tooltip{\n        min-width: 166px !important;\n        @media only screen and (max-width: 1199px){\n            min-width: 150px !important;\n        }\n    }\n`;\n\nconst RevenueTableWrapper = Styled.div`\n\n    .full-width-table{\n        >.ant-card{\n            ${({ theme }) => (theme.topMenu ? 'min-height: 555px' : 'min-height: 500px')};\n            @media only screen and (max-width: 1599px){\n                min-height: 100%;\n            }\n        }\n    }\n    .revenue-table{\n        .ant-table-content{\n            .ant-table-cell{\n                padding: 10px 20px;\n                &:first-child{\n                    ${({ theme }) => (!theme.rtl ? 'padding-left' : 'padding-right')}: 25px;\n                }\n                &:last-child{\n                    ${({ theme }) => (theme.rtl ? 'padding-left' : 'padding-right')}: 25px;\n                }\n            }\n            thead{\n                th{\n                    font-weight: 500;\n                    color: ${({ theme }) => theme['dark-color']};\n                    &:last-child{\n                        text-align: left;\n                    }\n                }\n            }\n            tbody{\n                td{\n                    color: ${({ theme }) => theme['gray-color']};\n                }\n            }\n        }\n    }\n`;\n\nconst RevenueChartWrapper = Styled.div`\n    .revenue-chat-label{\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        .chart-label{\n            &:not(:last-child){\n                margin-bottom: 18px;\n            }\n            .label-dot{\n                &.dot-Desktop{\n                    background: #20C997;\n                }\n                &.dot-Mobile{\n                    background: #5F63F2;\n                }\n                &.dot-Tablets{\n                    background: #FA8B0C;\n                }\n            }\n        }\n    }\n    .revenue-chart-data{\n        p{\n            font-size: 18px;\n            margin-bottom: 12px;\n            &:last-child{\n                margin-bottom: 0;\n            }\n            strong{\n                font-weight: 500;\n            }\n        }\n    }\n`;\n\nconst TrafficTableWrapper = Styled.div`\n    min-height: 450px;\n    ${({ theme }) => (theme.topMenu ? 'min-height: 515px' : 'min-height: 450px')};\n    @media only screen and (max-width: 1599px){\n        min-height: 400px;\n    }\n    @media only screen and (max-width: 1199px){\n        min-height: 100%;\n    }\n    .ant-table-content{\n        .ant-table-cell{\n            white-space: normal !important;\n            @media only screen and (max-width: 991px){\n                white-space: nowrap !important;\n            }\n        }\n    }\n    table{\n        thead{\n            tr{\n                th{\n                    background: #fff;\n                    border-top: 1px solid ${({ theme }) => theme['border-color-light']};\n                    color: ${({ theme }) => theme['dark-color']}\n                    padding: 16px 25px;\n                    text-align: ${({ theme }) => (theme.rtl ? 'left' : 'right')};\n                    &:first-child, &:nth-child(5){\n                        text-align: ${({ theme }) => (!theme.rtl ? 'left' : 'right')};\n                    }\n                }\n            }\n        }\n        tbody{\n            tr{\n                td{\n                    padding: 16px 25px;\n                    color: ${({ theme }) => theme['gray-color']};\n                    text-align: ${({ theme }) => (theme.rtl ? 'left' : 'right')};\n                    &:first-child, &:nth-child(5){\n                        text-align: ${({ theme }) => (!theme.rtl ? 'left' : 'right')};\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst Map = Styled.div`\n  margin: 1rem auto;\n  width: 300px;\n\n  svg {\n    stroke: #fff;\n\n    /* // All layers are just path elements */\n    path {\n      fill: #a82b2b;\n      cursor: pointer;\n      outline: none;\n\n      /* // When a layer is hovered */\n      &:hover {\n        fill: rgba(168, 43, 43, 0.83);\n      }\n\n      /* // When a layer is focused. */\n      &:focus {\n        fill: rgba(168, 43, 43, 0.6);\n      }\n\n      /* // When a layer is 'checked' (via checkedLayers prop). */\n      &[aria-checked='true'] {\n        fill: rgba(56, 43, 168, 1);\n      }\n\n      /* // When a layer is 'selected' (via currentLayers prop). */\n      &[aria-current='true'] {\n        fill: rgba(56, 43, 168, 0.83);\n      }\n\n      /* // You can also highlight a specific layer via it's id */\n      &[id='nz-can'] {\n        fill: rgba(56, 43, 168, 0.6);\n      }\n    }\n  }\n`;\n\nconst ChartContainer = Styled.div`\n    display: block;\n    font-family: \"Raleway\";\n    .chart-divider {\n        display: block;\n        width: 100%;\n        height: 100px;\n    }\n    .chartjs-tooltip {\n        opacity: 1;\n        position: absolute;\n        background: #fff\n        box-shadow: 0 8px 10px #9299B815;\n        padding: 10px 12px !important;\n        border-radius: 3px;\n        border: 1px solid #F1F2F6;\n        min-width: 80px;\n        -webkit-transition: all 0.5s ease;\n        transition: all 0.5s ease;\n        pointer-events: none;\n        transform: translate(-50%, 5%);\n        z-index: 222;\n        top: 0;\n        left: 0\n        @media only screen and (max-width: 1199px){\n            padding: 6px 8px !important;\n        }\n        &:before {\n            position: absolute;\n            content: '';\n            border-top: 5px solid #fff;\n            border-left: 5px solid transparent;\n            border-right: 5px solid transparent;\n            bottom: -5px;\n            ${({ theme }) => (!theme.rtl ? 'left' : 'right')}: 50%;\n            transform: translateX(-50%);\n        }\n    }\n    .chartjs-tooltip-key {\n        display: inline-block;\n        width: 10px;\n        height: 10px;\n        background: \"pink\";\n        ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}\n        : 10px;\n    }\n    .tooltip-title {\n        color: ${({ theme }) => theme['gray-color']};\n        font-size: 12px;\n        font-weight: 500 !important;\n        font-family: 'Inter', sans-serif;\n        text-transform: capitalize;\n        margin-bottom: 4px;\n    }\n    .tooltip-value {\n        color: #63b963;\n        font-size: 22px;\n        font-weight: 600 !important;\n        font-family: 'Inter', sans-serif;\n    }\n    .tooltip-value sup {\n        font-size: 12px;\n        @media only screen and (max-width: 1199px){\n            font-size: 11px;\n        }\n    }\n    table{\n        tbody{\n            td{\n                font-size: 13px;\n                font-weight: 500;\n                padding-bottom: 3px;\n                white-space: nowrap;\n                color: ${({ theme }) => theme['dark-color']};\n                @media only screen and (max-width: 1199px){\n                    font-size: 12px;\n                }\n                .data-label{\n                    ${({ theme }) => (theme.rtl ? 'margin-right' : 'margin-left')}: 3px;\n                    color: ${({ theme }) => theme['light-gray-color']}\n                }\n            }\n        }\n    }\n`;\n\nexport {\n  ChartContainer,\n  DashboardBaseStyleWrap,\n  EChartCard,\n  Focard,\n  CardBarChart,\n  CardGroup,\n  ExList,\n  OverviewCard,\n  PerformanceChartWrapper,\n  Pstates,\n  SessionChartWrapper,\n  SessionState,\n  RegionMap,\n  LadingPages,\n  RegionList,\n  CardBarChart2,\n  SocialMediaWrapper,\n  LineChartWrapper,\n  RatioCard,\n  IncomeExpenseWrapper,\n  LocationMapWrapper,\n  RevenueWrapper,\n  RevenueTableWrapper,\n  RevenueChartWrapper,\n  TrafficTableWrapper,\n  Map,\n};\n","import React from 'react';\nimport { Bar, HorizontalBar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport useChartData from './useChartData';\nimport { customTooltips } from '../utilities/utilities';\nimport { ChartContainer } from '../../container/dashboard/style';\n\nconst ChartjsBarChart = props => {\n  const { labels, datasets, options, height } = props;\n  const data = {\n    datasets,\n    labels,\n  };\n  return <Bar data={data} height={height} options={options} />;\n};\n\nChartjsBarChart.defaultProps = {\n  height: 200,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      backgroundColor: '#001737',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      backgroundColor: '#1ce1ac',\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: '#e5e9f2',\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            fontColor: '#182b49',\n            max: 80,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          barPercentage: 0.6,\n          ticks: {\n            beginAtZero: true,\n            fontSize: 11,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsBarChart.propTypes = {\n  labels: PropTypes.arrayOf(PropTypes.string),\n  height: PropTypes.number,\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n\nconst ChartjsHorizontalChart = props => {\n  const { labels, datasets, options, height } = props;\n  const data = {\n    datasets,\n    labels,\n  };\n  return <HorizontalBar data={data} height={height} options={options} />;\n};\n\nChartjsHorizontalChart.defaultProps = {\n  height: 200,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      backgroundColor: '#001737',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      backgroundColor: '#1ce1ac',\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            color: '#e5e9f2',\n          },\n          barPercentage: 0.6,\n          ticks: {\n            beginAtZero: true,\n            fontSize: 11,\n            fontColor: '#182b49',\n            max: 100,\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsHorizontalChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n\nconst ChartjsStackedChart = props => {\n  const { labels, datasets, options, height } = props;\n  const data = {\n    datasets,\n    labels,\n  };\n  return <Bar data={data} height={height} options={options} />;\n};\n\nChartjsStackedChart.defaultProps = {\n  height: 200,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      backgroundColor: '#001737',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      backgroundColor: '#1ce1ac',\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: '#e5e9f2',\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n          },\n          barPercentage: 0.6,\n          ticks: {\n            beginAtZero: true,\n            fontSize: 11,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsStackedChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n\nconst ChartjsLineChart = props => {\n  const { labels, datasets, options, height, layout, width, id } = props;\n  const data = {\n    labels,\n    datasets,\n  };\n  return (\n    <ChartContainer className=\"parentContainer\">\n      <Line\n        id={id && id}\n        width={width}\n        data={data}\n        height={height}\n        options={{\n          ...options,\n          ...layout,\n        }}\n      />\n    </ChartContainer>\n  );\n};\n\nChartjsLineChart.defaultProps = {\n  height: 479,\n  width: null,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      borderColor: '#001737',\n      borderWidth: 1,\n      fill: false,\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      borderColor: '#1ce1ac',\n      borderWidth: 1,\n      fill: false,\n    },\n  ],\n\n  options: {\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: '-10',\n        right: 0,\n        top: 0,\n        bottom: '-10',\n      },\n    },\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n  },\n};\n\nChartjsLineChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  layout: PropTypes.object,\n  width: PropTypes.number,\n  options: PropTypes.object,\n  id: PropTypes.string,\n};\n\nconst ChartjsAreaChart = props => {\n  const { labels, datasets, options, height, layout, id } = props;\n\n  const data = {\n    labels,\n    datasets,\n  };\n  return (\n    <div>\n      <ChartContainer className=\"parentContainer\">\n        <Line\n          id={id}\n          data={data}\n          height={height}\n          options={{\n            tooltips: {\n              mode: 'nearest',\n              intersect: false,\n              enabled: false,\n              custom: customTooltips,\n              callbacks: {\n                labelColor(tooltipItem, chart) {\n                  return {\n                    backgroundColor: datasets.map(item => item.borderColor),\n                    borderColor: 'transparent',\n                  };\n                },\n              },\n            },\n            ...options,\n            ...layout,\n          }}\n        />\n      </ChartContainer>\n    </div>\n  );\n};\n\nChartjsAreaChart.defaultProps = {\n  height: 250,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      borderColor: '#001737',\n      borderWidth: 1,\n      fill: true,\n      backgroundColor: '#00173750',\n      pointHoverBorderColor: 'transparent',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      borderColor: '#1ce1ac',\n      borderWidth: 1,\n      fill: true,\n      backgroundColor: '#1ce1ac50',\n      pointHoverBorderColor: 'transparent',\n    },\n  ],\n  options: {\n    maintainAspectRatio: true,\n    hover: {\n      mode: 'nearest',\n      intersect: false,\n    },\n\n    layout: {\n      padding: {\n        left: -10,\n        right: 0,\n        top: 2,\n        bottom: -10,\n      },\n    },\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            color: '#e5e9f2',\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            display: false,\n            stepSize: 20,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n          },\n\n          ticks: {\n            beginAtZero: true,\n            fontSize: 11,\n            display: false,\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsAreaChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  layout: PropTypes.object,\n  options: PropTypes.object,\n  id: PropTypes.string,\n};\n\nconst ChartjsBarChartTransparent = props => {\n  const { labels, datasets, options, height, layout } = props;\n\n  const data = {\n    labels,\n    datasets,\n  };\n\n  return (\n    <ChartContainer className=\"parentContainer\">\n      <Bar\n        data={data}\n        height={window.innerWidth <= 575 ? 230 : height}\n        options={{\n          ...options,\n          ...layout,\n          tooltips: {\n            mode: 'label',\n            intersect: false,\n            position: 'average',\n            enabled: false,\n            custom: customTooltips,\n            callbacks: {\n              label(t, d) {\n                const dstLabel = d.datasets[t.datasetIndex].label;\n                const { yLabel } = t;\n                return `<span class=\"chart-data\">${yLabel}</span> <span class=\"data-label\">${dstLabel}</span>`;\n              },\n              labelColor(tooltipItem, chart) {\n                const dataset = chart.config.data.datasets[tooltipItem.datasetIndex];\n                return {\n                  backgroundColor: dataset.hoverBackgroundColor,\n                  borderColor: 'transparent',\n                  usePointStyle: true,\n                };\n              },\n            },\n          },\n        }}\n      />\n    </ChartContainer>\n  );\n};\n\nChartjsBarChartTransparent.defaultProps = {\n  height: 176,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      backgroundColor: 'rgba(0,23,55, .5)',\n      label: 'Profit',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      backgroundColor: 'rgba(28,225,172, .5)',\n      label: 'Lose',\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: true,\n      position: 'bottom',\n      align: 'start',\n      labels: {\n        boxWidth: 6,\n        display: true,\n        usePointStyle: true,\n      },\n    },\n    layout: {\n      padding: {\n        left: '0',\n        right: 0,\n        top: 0,\n        bottom: '0',\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: '#e5e9f2',\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 13,\n            fontColor: '#182b49',\n            max: 80,\n            stepSize: 20,\n            callback(value, index, values) {\n              return `${value}k`;\n            },\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          barPercentage: 0.6,\n          ticks: {\n            beginAtZero: true,\n            fontSize: 13,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsBarChartTransparent.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n  layout: PropTypes.object,\n};\n\nconst ChartjsBarChartGrad = props => {\n  const { labels, datasets, options, height, layout } = props;\n  const data = {\n    labels,\n    datasets,\n  };\n  return <Bar data={data} height={height} options={{ ...options, ...layout }} />;\n};\n\nChartjsBarChartGrad.defaultProps = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [\n    {\n      data: [20, 60, 50, 45, 50, 60, 70, 40, 45, 35, 25, 30],\n      backgroundColor: 'rgba(0,23,55, .5)',\n    },\n    {\n      data: [10, 40, 30, 40, 60, 55, 45, 35, 30, 20, 15, 20],\n      backgroundColor: 'rgba(28,225,172, .5)',\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    layout: {\n      padding: {\n        left: '0',\n        right: 0,\n        top: 0,\n        bottom: '0',\n      },\n    },\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: '#e5e9f2',\n          },\n          ticks: {\n            beginAtZero: true,\n            fontSize: 10,\n            fontColor: '#182b49',\n            max: 80,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          barPercentage: 0.6,\n          ticks: {\n            beginAtZero: true,\n            fontSize: 11,\n            fontColor: '#182b49',\n          },\n        },\n      ],\n    },\n  },\n};\n\nChartjsBarChartGrad.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n  layout: PropTypes.object,\n};\n\nconst ChartjsPieChart = props => {\n  const { labels, datasets, options, height } = props;\n  const data = {\n    labels,\n    datasets,\n  };\n  return <Pie data={data} height={height} options={options} />;\n};\n\nChartjsPieChart.defaultProps = {\n  height: 200,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  datasets: [\n    {\n      data: [20, 20, 30, 5, 25],\n      backgroundColor: ['#560bd0', '#007bff', '#00cccc', '#cbe0e3', '#74de00'],\n    },\n  ],\n\n  options: {\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: false,\n    },\n    animation: {\n      animateScale: true,\n      animateRotate: true,\n    },\n  },\n};\n\nChartjsPieChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n/**\n *\n *  {const labels = chart.data.labels.reduce((prev, curent, i) => {\n        return `${prev}<li><span class=\"doughnutLabelColor\" style=\"background-color:${chart.data.datasets[0].backgroundColor[i]}\"></span><span class=\"doughnutLabe\">${curent}</span></li>`;\n      }, '');\n      const generatedLegend = `<ul class=\"${chart.id}-legend\">${labels}</ul>`;\n\n      return generatedLegend;} props\n */\n\nconst ChartjsDonutChart = props => {\n  const { labels, datasets, options, height } = props;\n  const { ref } = useChartData();\n  const data = {\n    labels,\n    datasets,\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <p>\n        <span>{datasets[0].data.reduce((a, b) => a + b, 0)}</span>\n        Total visitors\n      </p>\n      <Doughnut ref={ref} data={data} height={height} options={options} />\n    </div>\n  );\n};\n\nChartjsDonutChart.defaultProps = {\n  height: 200,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  datasets: [\n    {\n      data: [20, 20, 30, 5, 25],\n      backgroundColor: ['#560bd0', '#007bff', '#00cccc', '#cbe0e3', '#74de00'],\n    },\n  ],\n\n  options: {\n    cutoutPercentage: 70,\n    maintainAspectRatio: true,\n    responsive: true,\n    legend: {\n      display: false,\n      position: 'bottom',\n    },\n    animation: {\n      animateScale: true,\n      animateRotate: true,\n    },\n  },\n};\n\nChartjsDonutChart.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n\nconst ChartjsDonutChart2 = props => {\n  const { labels, datasets, options, height } = props;\n  const { ref } = useChartData();\n  const dataInfo = {\n    labels,\n    datasets,\n  };\n\n  return (\n    <div>\n      <Doughnut ref={ref} data={dataInfo} height={height} options={options} width=\"auto\" />\n\n      <div className=\"align-center-v justify-content-between rd-labels\">\n        <div className=\"revenue-chat-label\">\n          {labels.map((label, key) => {\n            return (\n              <div key={key + 1} className=\"chart-label\">\n                <span className={`label-dot dot-${label}`} />\n                {label}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"revenue-chart-data\">\n          {datasets.map((item, key) => {\n            const { data } = item;\n            return (\n              <div key={key + 1}>\n                {data.map(value => {\n                  return (\n                    <>\n                      <p>\n                        <strong>${value}</strong>\n                      </p>\n                    </>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"revenue-chat-percentage\">\n          <span>45%</span>\n          <span>45%</span>\n          <span>45%</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nChartjsDonutChart2.defaultProps = {\n  height: 220,\n  // width: 220,\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  datasets: [\n    {\n      data: [20, 20, 30, 5, 25],\n      backgroundColor: ['#560bd0', '#007bff', '#00cccc', '#cbe0e3', '#74de00'],\n    },\n  ],\n\n  options: {\n    cutoutPercentage: 60,\n    maintainAspectRatio: false,\n    responsive: false,\n    legend: {\n      display: false,\n      position: 'bottom',\n    },\n    animation: {\n      animateScale: true,\n      animateRotate: true,\n    },\n  },\n};\n\nChartjsDonutChart2.propTypes = {\n  height: PropTypes.number,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  datasets: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object,\n};\n\nexport {\n  ChartjsDonutChart,\n  ChartjsDonutChart2,\n  ChartjsPieChart,\n  ChartjsBarChartGrad,\n  ChartjsBarChartTransparent,\n  ChartjsAreaChart,\n  ChartjsLineChart,\n  ChartjsStackedChart,\n  ChartjsHorizontalChart,\n  ChartjsBarChart,\n};\n","import actions from './actions';\nimport {RequestService as req} from '../../services/requestService';\nimport { Constants } from '../../config/constants';\n\nconst {\n    fetchUsersStatsAction,\n    fetchPurchasesStatsAction,\n    fetchRevenueStatsAction,\n} = actions;\n\nexport const fetchUsersStats = () => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.DASHBOARD}users-stats`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchUsersStatsAction(cb)))\n    };\n};\n\nexport const fetchPurchasesStats = () => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.DASHBOARD}purchases-stats`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchPurchasesStatsAction(cb)))\n    };\n};\n\nexport const fetchRevenueStats = () => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.DASHBOARD}revenue-stats`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchRevenueStatsAction(cb)))\n    };\n};\n","import React, {useEffect} from 'react';\nimport {Row, Col} from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport {Cards} from '../../components/cards/frame/cards-frame';\nimport {ChartjsBarChartTransparent} from '../../components/charts/chartjs';\nimport {\n    fetchUsersStats,\n    fetchPurchasesStats,\n    fetchRevenueStats,\n} from \"../../redux/dashboard/actionCreator\";\nimport {Main} from '../styled';\nimport Heading from '../../components/heading/heading';\nimport {CardBarChart2, EChartCard} from './style';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst chartOptions = {\n    legend: {\n        display: false,\n        labels: {\n            display: false,\n        },\n    },\n    scales: {\n        yAxes: [\n            {\n                stacked: true,\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    display: false,\n                },\n            },\n        ],\n        xAxes: [\n            {\n                stacked: true,\n                barPercentage: 1,\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    display: false,\n                },\n            },\n        ],\n    },\n};\n\nconst Dashboard = () => {\n    const dispatch      = useDispatch();\n    const usersStats = useSelector(state => state.dashboard.usersStats);\n    const purchasesStats = useSelector(state => state.dashboard.purchasesStats);\n    const revenueStats = useSelector(state => state.dashboard.revenueStats);\n\n    useEffect(() => {\n        if (\n            fetchUsersStats &&\n            fetchPurchasesStats &&\n            fetchRevenueStats\n        ) {\n            const fetchData = async () => {\n                await dispatch(fetchUsersStats());\n                await dispatch(fetchPurchasesStats());\n                await dispatch(fetchRevenueStats());\n            };\n            fetchData().then(r => {});\n        }\n    }, [dispatch]);\n\n    const getStatMonthNames = (stats) => {\n        const arr = [];\n        stats.forEach((data) => arr.push(`${data.month} ${data._id.year}`));\n        return arr;\n    }\n\n    const getStatMonthValues = (stats) => {\n        const arr = [];\n        stats.forEach((data) => arr.push(data.count));\n        return arr;\n    }\n\n    const getRevenueValues = (stats) => {\n        const arr = [];\n        stats.forEach((data) => arr.push((data.count).toFixed(0)));\n        return arr;\n    }\n\n    return (\n        <Main style={{marginTop: \"30px\"}}>\n            <Row gutter={25}>\n                <Col xxl={8} md={8} sm={12} xs={24}>\n                    <Cards headless>\n                        <EChartCard>\n                            <div className=\"card-chunk\">\n                                <CardBarChart2>\n                                    <Heading as=\"h1\">{(usersStats.total).toLocaleString('en-US')}</Heading>\n                                    <span>Customers</span>\n                                    <p>\n                                        <span className=\"growth-upward\">\n                                            <FeatherIcon icon=\"arrow-up\"/> {usersStats.percentage}%\n                                        </span>\n                                        <span>This Month</span>\n                                    </p>\n                                </CardBarChart2>\n                            </div>\n                            <div className=\"card-chunk\">\n                                <ChartjsBarChartTransparent\n                                    labels={getStatMonthNames(usersStats.stats)}\n                                    datasets={[\n                                        {\n                                            data: getStatMonthValues(usersStats.stats),\n                                            backgroundColor: '#5F63F23a',\n                                            hoverBackgroundColor: '#5F63F2',\n                                            label: 'Customers',\n                                        },\n                                    ]}\n                                    options={chartOptions}\n                                />\n                            </div>\n                        </EChartCard>\n                    </Cards>\n                </Col>\n\n                <Col xxl={8} md={8} sm={12} xs={24}>\n                    <Cards headless>\n                        <EChartCard>\n                            <div className=\"card-chunk\">\n                                <CardBarChart2>\n                                    <Heading as=\"h1\">{(purchasesStats.total).toLocaleString('en-US')}</Heading>\n                                    <span>Orders</span>\n                                    <p>\n                                        <span className=\"growth-upward\">\n                                            <FeatherIcon icon=\"arrow-up\"/> {purchasesStats.percentage}%\n                                        </span>\n                                        <span>This Month</span>\n                                    </p>\n                                </CardBarChart2>\n                            </div>\n                            <div className=\"card-chunk\">\n                                <ChartjsBarChartTransparent\n                                    labels={getStatMonthNames(purchasesStats.stats)}\n                                    datasets={[\n                                        {\n                                            data: getStatMonthValues(purchasesStats.stats),\n                                            backgroundColor: '#fa8b0c3a',\n                                            hoverBackgroundColor: '#FA8B0C',\n                                            label: 'Orders',\n                                        },\n                                    ]}\n                                    options={chartOptions}\n                                />\n                            </div>\n                        </EChartCard>\n                    </Cards>\n                </Col>\n\n                <Col xxl={8} md={8} sm={12} xs={24}>\n                    <Cards headless>\n                        <EChartCard>\n                            <div className=\"card-chunk\">\n                                <CardBarChart2>\n                                    <Heading as=\"h1\">{(Number((revenueStats.total).toFixed(0))).toLocaleString('en-US')} <small>BDT</small></Heading>\n                                    <span>Revenue</span>\n                                    <p>\n                                        <span className=\"growth-upward\">\n                                            <FeatherIcon icon=\"arrow-up\"/> {revenueStats.percentage}%\n                                        </span>\n                                        <span>This Month</span>\n                                    </p>\n                                </CardBarChart2>\n                            </div>\n                            <div className=\"card-chunk\">\n                                <ChartjsBarChartTransparent\n                                    labels={getStatMonthNames(revenueStats.stats)}\n                                    datasets={[\n                                        {\n                                            data: getRevenueValues(revenueStats.stats),\n                                            backgroundColor: '#2c3e503a',\n                                            hoverBackgroundColor: '#2c3e50',\n                                            label: 'BDT',\n                                        },\n                                    ]}\n                                    options={chartOptions}\n                                />\n                            </div>\n                        </EChartCard>\n                    </Cards>\n                </Col>\n            </Row>\n        </Main>\n    );\n};\n\nexport default Dashboard;\n","import Styled from 'styled-components';\nimport { Card } from 'antd';\n\nconst BtnWraper = theme => `\n    .ant-card-head {\n      display: flex;\n      justify-content: space-evenly;\n      .ant-card-head-wrapper{\n        width: 100%;\n      }\n      .ant-tabs.ant-tabs-top.ant-card-head-tabs.ant-tabs-large.ant-tabs-line{\n        width: 100%;\n        display: block;\n      }\n      .ant-tabs-nav-scroll {\n        display: flex;\n        justify-content: flex-end;\n      }\n      .ant-tabs-ink-bar.ant-tabs-ink-bar-animated {\n        display: none !important;\n      }\n      .ant-tabs-nav .ant-tabs-tab {\n        border-radius: 2px;\n        height: 30px;\n        margin: 0px;\n        ${theme.rtl ? 'margin-right' : 'margin-left'}: -1px;\n        display: inline-flex;\n        align-items: center;\n        border: 1px solid ${theme['border-color-base']};\n        background: #fff;\n        span svg {\n          ${theme.rtl ? 'padding-right' : 'padding-left'}: 5px !important;\n        }\n      }\n      .ant-tabs-nav .ant-tabs-tab-active {\n        font-weight: 500;\n        border: 1px solid ${theme['primary-color']};\n        background: ${theme['primary-color']};\n        color: #fff;\n        border-radius: 2px;\n        height: 30px;\n        margin: 0px;\n        display: inline-flex;\n        align-items: center;\n      }\n      .ant-tabs-bar {\n        border: none;\n      }\n      .ant-tabs-nav-wrap {\n        margin-bottom: 0px;\n        overflow: hidden;\n    }\n    }\n    .ant-card-head .ant-tabs.ant-tabs-top.ant-card-head-tabs.ant-tabs-large.ant-tabs-line {\n      width: 100%;\n      display: block;\n      justify-content: flex-end;\n      height: 73px;\n      padding-top: 8px;\n  }\n`;\n\nconst CardFrame = Styled(Card)`\n  ${({ isbutton, theme }) => isbutton && BtnWraper(theme)}\n  margin-bottom: 25px !important;\n  .ant-card-head{\n    border-color: #F1F2F6;\n  }\n  .ant-card-head .ant-card-head-title {\n    padding: 18px 0;\n  }\n  .ant-card-head-title .ant-page-header-heading-title{\n    font-weight: 500;\n  }\n  .ant-card-body{\n    padding: ${({ bodypadding }) => (bodypadding ? `${bodypadding} !important` : '25px')};\n    table{\n      .ant-tag{\n        line-height: 18px;\n        border: 0 none;\n        text-transform: uppercase;\n        font-size: 10px;\n        color: #fff;\n        &.early{\n          background: ${({ theme }) => theme['primary-color']};\n        }\n        &.late{\n          background: ${({ theme }) => theme['warning-color']};\n        }\n        &.complete{\n          background: ${({ theme }) => theme['success-color']};\n        }\n        &.progress{\n          background: ${({ theme }) => theme['danger-color']};\n        }\n      }\n    }\n  }\n  .ant-card.ant-card-bordered {\n      border-radius: 5px;\n      overflow: hidden;\n      border: none;\n  }\n  .custom-label {\n    font-size: 13px;\n    color: #868eae;\n    display: inline-flex;\n    align-items: center;\n  }\n  .custom-label:not(:last-child) {\n    ${({ theme }) => (theme.rtl ? ' margin-left' : ' margin-right')} : 20px;\n  }\n\n  .custom-label span {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    ${({ theme }) => (theme.rtl ? ' margin-left' : ' margin-right')}: 7px;\n  }\n  \n\n  .ant-card-extra .ant-dropdown-trigger {\n    line-height: 0;\n    order: 1;\n    ${({ theme }) => (!theme.rtl ? ' margin-left' : ' margin-right')}: 20px !important;\n  }\n\n  .growth-downward h1 sub,\n  .growth-upward h1 sub {\n    font-size: 14px;\n    font-weight: 600;\n    bottom: 0;\n    ${({ theme }) => (!theme.rtl ? ' left' : ' right')}: 5px;\n  }\n \n`;\n\nexport { CardFrame };\n","import Styled from 'styled-components';\nimport { Dropdown } from 'antd';\n\nconst Content = Styled.div`\n    background: #ffffff;\n    box-shadow: 0px 0px 2px #888;\n    a i, a svg, a img {\n        ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 8px;\n    }\n    a {\n        display: block;\n        color: #888;\n        padding: 6px 12px;\n    }\n    a:hover {\n        background: ${({ theme }) => theme['primary-color']}10;\n        color: ${({ theme }) => theme['primary-color']}\n    }\n`;\n\nconst DropdownStyle = Styled(Dropdown)`\n    \n`;\n\nexport { Content, DropdownStyle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Content, DropdownStyle } from './dropdown-style';\n\nconst Dropdown = props => {\n  const { content, placement, title, action, children, style, className } = props;\n\n  return (\n    <DropdownStyle\n      overlayClassName={className}\n      style={style}\n      placement={placement}\n      title={title}\n      overlay={<Content>{content}</Content>}\n      trigger={action}\n    >\n      {children}\n    </DropdownStyle>\n  );\n};\n\nconst content = (\n  <>\n    <Link to=\"#\">\n      <span>Export to CSV</span>\n    </Link>\n    <Link to=\"#\">\n      <span>Export to XML</span>\n    </Link>\n    <Link to=\"#\">\n      <span>Export to Drive</span>\n    </Link>\n  </>\n);\n\nDropdown.defaultProps = {\n  action: ['hover'],\n  placement: 'bottomCenter',\n  content,\n  style: {},\n  className: 'strikingDash-dropdown',\n};\n\nDropdown.propTypes = {\n  placement: PropTypes.string,\n  title: PropTypes.string,\n  action: PropTypes.array,\n  content: PropTypes.node,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport { Dropdown };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport PropTypes from 'prop-types';\nimport { CardFrame } from './style';\nimport Heading from '../../heading/heading';\nimport { Dropdown } from '../../dropdown/dropdown';\n\nconst Cards = props => {\n  const {\n    title,\n    children,\n    more,\n    moreText,\n    size,\n    headless,\n    caption,\n    isbutton,\n    bodyStyle,\n    headStyle,\n    border,\n    bodypadding,\n  } = props;\n  return (\n    <>\n      {!headless ? (\n        <CardFrame\n          size={size}\n          title={title}\n          bodyStyle={bodyStyle && bodyStyle}\n          headStyle={headStyle && headStyle}\n          bordered={border}\n          bodypadding={bodypadding && bodypadding}\n          extra={\n            <>\n              {more && (\n                <Dropdown content={more} placement=\"bottomCenter\">\n                  <NavLink to=\"#\">{!moreText ? <FeatherIcon icon=\"more-horizontal\" /> : 'More'}</NavLink>\n                </Dropdown>\n              )}\n\n              {isbutton && isbutton}\n            </>\n          }\n          style={{ width: '100%' }}\n        >\n          {children}\n        </CardFrame>\n      ) : (\n        <CardFrame\n          bodypadding={bodypadding && bodypadding}\n          bodyStyle={bodyStyle && bodyStyle}\n          size={size}\n          style={{ width: '100%' }}\n          bordered={border}\n        >\n          {title && <Heading as=\"h4\">{title}</Heading>}\n          {caption && <p>{caption}</p>}\n          {children}\n        </CardFrame>\n      )}\n    </>\n  );\n};\n\nCards.defaultProps = {\n  border: false,\n};\n\nCards.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  size: PropTypes.string,\n  more: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  bodyStyle: PropTypes.object,\n  headStyle: PropTypes.object,\n  isbutton: PropTypes.node,\n  headless: PropTypes.bool,\n  border: PropTypes.bool,\n  caption: PropTypes.string,\n  bodypadding: PropTypes.string,\n  moreText: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nexport { Cards };\n"],"sourceRoot":""}