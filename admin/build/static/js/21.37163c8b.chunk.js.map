{"version":3,"sources":["components/page-headers/style.js","components/page-headers/page-headers.js","redux/userManagement/rolesPermissions/actionCreator.js","container/userManagement/rolesPermissions.js","components/cards/frame/style.js","components/dropdown/dropdown-style.js","components/dropdown/dropdown.js","components/cards/frame/cards-frame.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["PageHeaderStyle","Styled","theme","rtl","PageHeader","props","title","subTitle","routes","buttons","ghost","bgColor","style","backgroundColor","breadcrumb","extra","fetchRolesPermissions","roleId","state","setState","dispatch","req","getRequest","url","Constants","USER_MANAGEMENT","auth","cb","arr","forEach","permission","checked","permissions","saveRolesPermissions","putRequest","body","console","log","RolesPermissions","useDispatch","isLoading","useSelector","utilities","loading","roles","useState","useEffect","fetchRoles","multipleChange","permissionIndex","statePermissions","permissionChecked","md","sm","xs","headless","span","Item","name","initialValue","label","onChange","value","map","data","Option","_id","key","length","index","borderBottom","marginBottom","indeterminate","event","el","group","Group","options","Scope","checkScopes","className","type","htmlType","onClick","disabled","CardFrame","isbutton","BtnWraper","bodypadding","Content","div","DropdownStyle","Dropdown","content","placement","action","children","overlayClassName","overlay","trigger","to","defaultProps","Cards","more","moreText","size","caption","bodyStyle","headStyle","border","width","bordered","as","icon","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/21.37163c8b.chunk.js","sourcesContent":["import Styled from 'styled-components';\nimport { PageHeader } from 'antd';\n\nconst PageHeaderStyle = Styled(PageHeader)`\n  margin-bottom: 25px;\n  \n  .page-header-actions button.ant-btn-white svg {\n    width: 12px;\n    height: 12px;\n    ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 2px;\n    color: #5f63f2;\n  }\n  i +span, svg +span, img +span {\n      ${({ theme }) => (!theme.rtl ? 'margin-left' : 'margin-right')}: 6px;\n  }\n`;\n\nexport { PageHeaderStyle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeaderStyle } from './style';\n\nconst PageHeader = props => {\n    const { title, subTitle, routes, buttons, ghost, bgColor } = props;\n    return (\n        <>\n            <div\n                style={{\n                    backgroundColor: bgColor || '#F4F5F7',\n                }}\n            >\n                <PageHeaderStyle\n                    style={{\n                        backgroundColor: 'rgb(244, 245, 247)',\n                    }}\n                    // onBack={() => window.history.back()}\n                    title={title}\n                    subTitle={subTitle}\n                    breadcrumb={routes && { routes }}\n                    extra={buttons}\n                    ghost={ghost}\n                />\n            </div>\n        </>\n    );\n};\n\nPageHeader.propTypes = {\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    bgColor: PropTypes.string,\n    routes: PropTypes.arrayOf(PropTypes.string),\n    // eslint-disable-next-line react/forbid-prop-types\n    buttons: PropTypes.array,\n    ghost: PropTypes.bool,\n};\n\nexport { PageHeader };\n","import {RequestService as req} from '../../../services/requestService';\nimport { Constants } from '../../../config/constants';\n\nexport const fetchRolesPermissions = (roleId, {state, setState}) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.USER_MANAGEMENT}roles-permissions/${roleId}`, \n            auth: 'bearer'\n        }, (cb) => {\n            let arr = [];\n            cb.forEach((permission) => arr = [...arr, ...permission.checked]);\n            setState({ ...state, checked: arr, permissions: cb, roleId});\n        });\n    };\n};\n\nexport const saveRolesPermissions = ({roleId, permissions}) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.USER_MANAGEMENT}roles-permissions`,\n            body: {roleId, permissions},\n            auth: 'bearer'\n        }, (cb) => console.log(cb))\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Select, Checkbox } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRoles } from '../../redux/utilities/actionCreator';\nimport { fetchRolesPermissions, saveRolesPermissions } from '../../redux/userManagement/rolesPermissions/actionCreator';\nimport {Scope} from \"../../services/scopeService\";\n\nconst RolesPermissions = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const roles = useSelector(state => state.utilities.roles);\n\n    const [state, setState] = useState({\n        checked: [],\n        permissions: [],\n        roleId: '',\n    });\n\n    const handleChange = (value) => {\n        if (fetchRolesPermissions)\n            dispatch(fetchRolesPermissions(value, {state, setState}));\n    };\n\n    useEffect(() => {\n        if (fetchRoles) {\n            dispatch(fetchRoles());\n        }\n    }, [dispatch]);\n\n    const multipleChange = (checked, permissions, permissionIndex) => {\n        let statePermissions = state.permissions;\n        let permissionChecked = [];\n\n        statePermissions[permissionIndex].checked = checked;\n        statePermissions.forEach((permission) => permissionChecked = [...permissionChecked, ...permission.checked]);\n        setState({ ...state, permissions: statePermissions, checked: permissionChecked });\n    };\n\n    const setRolesPermissions = (permissions) => {\n        if (saveRolesPermissions)\n            dispatch(saveRolesPermissions({roleId: state.roleId, permissions}));\n    };\n\n    return (\n        <>\n            <PageHeader ghost title=\"Roles Permissions\" />\n            <Main>\n                <Row>\n                    <Col md={24} sm={24} xs={24}>\n                        <Cards headless={true}>\n                            <Row>\n                                <Col span={12}>\n                                    <Form>\n                                        <Form.Item\n                                            name=\"role\"\n                                            initialValue={''}\n                                            label=\"Select Role\">\n                                            <Select onChange={handleChange} loading={isLoading}>\n                                                {roles.map((data) => <Select.Option value={data._id} key={data._id}>{data.name}</Select.Option>)}\n                                            </Select>\n                                        </Form.Item>\n                                    </Form>\n                                </Col>\n                            </Row>\n                        </Cards>\n                        {state.permissions && state.permissions.length > 0 ? (\n                            <Cards title={'Permissions'}>\n                                {state.permissions.map((data, index) => (\n                                    <div key={index}>\n                                        {index !== 0 ? <><br/><br/></> : ''}\n                                        <div style={{ borderBottom: '1px solid #E9E9E9', marginBottom: '10px'}}>\n                                            <Checkbox\n                                                indeterminate={data.checked.length && data.checked.length < data.permissions.length}\n                                                onChange={(event) => multipleChange((data.permissions.length === data.checked.length ? [] : data.permissions.map((el) => el.value)), data.permissions, index)}\n                                                checked={data.checked.length === data.permissions.length}\n                                            >\n                                                {data.group}\n                                            </Checkbox>\n                                        </div>\n\n                                        <Checkbox.Group\n                                            options={data.permissions}\n                                            value={data.checked}\n                                            onChange={(event) => multipleChange(event, data.permissions, index)} />\n                                    </div>\n                                ))}\n                                {Scope.checkScopes(['um_roles_permissions_update']) && (\n                                    <div className=\"text-right\">\n                                        <br/>\n                                        <Button\n                                            type=\"primary\"\n                                            htmlType=\"button\"\n                                            onClick={() => setRolesPermissions(state.checked)}\n                                            disabled={isLoading}>\n                                            {isLoading ? 'Loading...' : 'Submit'}\n                                        </Button>\n                                    </div>\n                                )}\n                            </Cards>\n                        ) : ''}\n                    </Col>\n                </Row>\n            </Main>\n        </>\n    );\n};\n\nexport default RolesPermissions;\n","import Styled from 'styled-components';\nimport { Card } from 'antd';\n\nconst BtnWraper = theme => `\n    .ant-card-head {\n      display: flex;\n      justify-content: space-evenly;\n      .ant-card-head-wrapper{\n        width: 100%;\n      }\n      .ant-tabs.ant-tabs-top.ant-card-head-tabs.ant-tabs-large.ant-tabs-line{\n        width: 100%;\n        display: block;\n      }\n      .ant-tabs-nav-scroll {\n        display: flex;\n        justify-content: flex-end;\n      }\n      .ant-tabs-ink-bar.ant-tabs-ink-bar-animated {\n        display: none !important;\n      }\n      .ant-tabs-nav .ant-tabs-tab {\n        border-radius: 2px;\n        height: 30px;\n        margin: 0px;\n        ${theme.rtl ? 'margin-right' : 'margin-left'}: -1px;\n        display: inline-flex;\n        align-items: center;\n        border: 1px solid ${theme['border-color-base']};\n        background: #fff;\n        span svg {\n          ${theme.rtl ? 'padding-right' : 'padding-left'}: 5px !important;\n        }\n      }\n      .ant-tabs-nav .ant-tabs-tab-active {\n        font-weight: 500;\n        border: 1px solid ${theme['primary-color']};\n        background: ${theme['primary-color']};\n        color: #fff;\n        border-radius: 2px;\n        height: 30px;\n        margin: 0px;\n        display: inline-flex;\n        align-items: center;\n      }\n      .ant-tabs-bar {\n        border: none;\n      }\n      .ant-tabs-nav-wrap {\n        margin-bottom: 0px;\n        overflow: hidden;\n    }\n    }\n    .ant-card-head .ant-tabs.ant-tabs-top.ant-card-head-tabs.ant-tabs-large.ant-tabs-line {\n      width: 100%;\n      display: block;\n      justify-content: flex-end;\n      height: 73px;\n      padding-top: 8px;\n  }\n`;\n\nconst CardFrame = Styled(Card)`\n  ${({ isbutton, theme }) => isbutton && BtnWraper(theme)}\n  margin-bottom: 25px !important;\n  .ant-card-head{\n    border-color: #F1F2F6;\n  }\n  .ant-card-head .ant-card-head-title {\n    padding: 18px 0;\n  }\n  .ant-card-head-title .ant-page-header-heading-title{\n    font-weight: 500;\n  }\n  .ant-card-body{\n    padding: ${({ bodypadding }) => (bodypadding ? `${bodypadding} !important` : '25px')};\n    table{\n      .ant-tag{\n        line-height: 18px;\n        border: 0 none;\n        text-transform: uppercase;\n        font-size: 10px;\n        color: #fff;\n        &.early{\n          background: ${({ theme }) => theme['primary-color']};\n        }\n        &.late{\n          background: ${({ theme }) => theme['warning-color']};\n        }\n        &.complete{\n          background: ${({ theme }) => theme['success-color']};\n        }\n        &.progress{\n          background: ${({ theme }) => theme['danger-color']};\n        }\n      }\n    }\n  }\n  .ant-card.ant-card-bordered {\n      border-radius: 5px;\n      overflow: hidden;\n      border: none;\n  }\n  .custom-label {\n    font-size: 13px;\n    color: #868eae;\n    display: inline-flex;\n    align-items: center;\n  }\n  .custom-label:not(:last-child) {\n    ${({ theme }) => (theme.rtl ? ' margin-left' : ' margin-right')} : 20px;\n  }\n\n  .custom-label span {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    ${({ theme }) => (theme.rtl ? ' margin-left' : ' margin-right')}: 7px;\n  }\n  \n\n  .ant-card-extra .ant-dropdown-trigger {\n    line-height: 0;\n    order: 1;\n    ${({ theme }) => (!theme.rtl ? ' margin-left' : ' margin-right')}: 20px !important;\n  }\n\n  .growth-downward h1 sub,\n  .growth-upward h1 sub {\n    font-size: 14px;\n    font-weight: 600;\n    bottom: 0;\n    ${({ theme }) => (!theme.rtl ? ' left' : ' right')}: 5px;\n  }\n \n`;\n\nexport { CardFrame };\n","import Styled from 'styled-components';\nimport { Dropdown } from 'antd';\n\nconst Content = Styled.div`\n    background: #ffffff;\n    box-shadow: 0px 0px 2px #888;\n    a i, a svg, a img {\n        ${({ theme }) => (theme.rtl ? 'margin-left' : 'margin-right')}: 8px;\n    }\n    a {\n        display: block;\n        color: #888;\n        padding: 6px 12px;\n    }\n    a:hover {\n        background: ${({ theme }) => theme['primary-color']}10;\n        color: ${({ theme }) => theme['primary-color']}\n    }\n`;\n\nconst DropdownStyle = Styled(Dropdown)`\n    \n`;\n\nexport { Content, DropdownStyle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Content, DropdownStyle } from './dropdown-style';\n\nconst Dropdown = props => {\n  const { content, placement, title, action, children, style, className } = props;\n\n  return (\n    <DropdownStyle\n      overlayClassName={className}\n      style={style}\n      placement={placement}\n      title={title}\n      overlay={<Content>{content}</Content>}\n      trigger={action}\n    >\n      {children}\n    </DropdownStyle>\n  );\n};\n\nconst content = (\n  <>\n    <Link to=\"#\">\n      <span>Export to CSV</span>\n    </Link>\n    <Link to=\"#\">\n      <span>Export to XML</span>\n    </Link>\n    <Link to=\"#\">\n      <span>Export to Drive</span>\n    </Link>\n  </>\n);\n\nDropdown.defaultProps = {\n  action: ['hover'],\n  placement: 'bottomCenter',\n  content,\n  style: {},\n  className: 'strikingDash-dropdown',\n};\n\nDropdown.propTypes = {\n  placement: PropTypes.string,\n  title: PropTypes.string,\n  action: PropTypes.array,\n  content: PropTypes.node,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport { Dropdown };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport FeatherIcon from 'feather-icons-react';\nimport PropTypes from 'prop-types';\nimport { CardFrame } from './style';\nimport Heading from '../../heading/heading';\nimport { Dropdown } from '../../dropdown/dropdown';\n\nconst Cards = props => {\n  const {\n    title,\n    children,\n    more,\n    moreText,\n    size,\n    headless,\n    caption,\n    isbutton,\n    bodyStyle,\n    headStyle,\n    border,\n    bodypadding,\n  } = props;\n  return (\n    <>\n      {!headless ? (\n        <CardFrame\n          size={size}\n          title={title}\n          bodyStyle={bodyStyle && bodyStyle}\n          headStyle={headStyle && headStyle}\n          bordered={border}\n          bodypadding={bodypadding && bodypadding}\n          extra={\n            <>\n              {more && (\n                <Dropdown content={more} placement=\"bottomCenter\">\n                  <NavLink to=\"#\">{!moreText ? <FeatherIcon icon=\"more-horizontal\" /> : 'More'}</NavLink>\n                </Dropdown>\n              )}\n\n              {isbutton && isbutton}\n            </>\n          }\n          style={{ width: '100%' }}\n        >\n          {children}\n        </CardFrame>\n      ) : (\n        <CardFrame\n          bodypadding={bodypadding && bodypadding}\n          bodyStyle={bodyStyle && bodyStyle}\n          size={size}\n          style={{ width: '100%' }}\n          bordered={border}\n        >\n          {title && <Heading as=\"h4\">{title}</Heading>}\n          {caption && <p>{caption}</p>}\n          {children}\n        </CardFrame>\n      )}\n    </>\n  );\n};\n\nCards.defaultProps = {\n  border: false,\n};\n\nCards.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  size: PropTypes.string,\n  more: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  bodyStyle: PropTypes.object,\n  headStyle: PropTypes.object,\n  isbutton: PropTypes.node,\n  headless: PropTypes.bool,\n  border: PropTypes.bool,\n  caption: PropTypes.string,\n  bodypadding: PropTypes.string,\n  moreText: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nexport { Cards };\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}