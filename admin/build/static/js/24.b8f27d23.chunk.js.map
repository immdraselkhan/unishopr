{"version":3,"sources":["container/clients/travelers/list.js","container/clients/travelers/filter.js","container/clients/travelers/index.js","redux/clients/travelers/actionCreator.js"],"names":["TravelerList","state","setState","filters","setFilters","isLoading","travelers","approveRequest","history","useHistory","columns","title","className","render","traveler","photo","src","target","to","_id","firstName","lastName","phone","country","code","dataIndex","key","services","status","Scope","checkScopes","size","type","icon","name","onClick","Alert","confirm","action","travelerId","push","headerButtons","filterVisible","ghost","subTitle","total","onBack","window","back","extra","rowKey","bordered","loading","dataSource","data","pagination","current","page","onChange","pageNo","perPageNo","perPage","TravelersFilter","filter","initialFilters","handleSubmit","useDispatch","toString","number","email","gender","resetFilters","resetFields","footerButtons","htmlType","disabled","form","md","visible","onCancel","footer","width","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","initialValue","rules","label","placeholder","allowClear","Option","value","TravelersData","dispatch","useSelector","utilities","clientsTravelers","utilitiesTravelers","useForm","useState","showFilter","reqModalVisible","modalType","user","useEffect","fetchTravelers","fetchData","then","r","getTravelers","users","fetchUsers","fetchUtilitiesTravelers","fetchTravelersAction","actions","queries","req","getRequest","url","Constants","CLIENTS","auth","cb","putRequest","body"],"mappings":"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","file":"static/js/24.b8f27d23.chunk.js","sourcesContent":["import React from \"react\";\nimport { Avatar, Button as AntButton, PageHeader, Table } from \"antd\";\nimport { Scope } from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport { Alert } from \"../../../services/alertService\";\nimport { Constants } from \"../../../config/constants\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\n\nconst TravelerList = (\n    {\n        state,\n        setState,\n        filters,\n        setFilters,\n        isLoading,\n        travelers,\n        approveRequest\n    }\n) => {\n    const history = useHistory();\n\n    const columns = [\n        {\n            title: 'Traveler',\n            className: \"pointer text-default\",\n            render: (traveler) => <span className=\"d-flex\">\n                {/* <Avatar src={`${Constants.S3_BASE_URL(traveler.photo)}`} /> */}\n                {\n                    traveler?.photo ? <Avatar src={traveler?.photo} /> : <Avatar src={\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/matureman1-512.png\"} />\n                }\n                <span className=\"pl-5\">\n                    <Link target=\"_blank\" to={`/admin/client/users-profile/${traveler._id}`}>\n                        {`${traveler.firstName} ${traveler.lastName}`}<br />\n                        {traveler.phone.country.code}{traveler.phone.phone}\n                    </Link>\n                </span>\n            </span>\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n        },\n        {\n            title: 'Status',\n            render: (key) => key.services?.traveler?.status ? key.services?.traveler?.status : 'N/A'\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            render: (key) => <div className=\"text-right\">\n                {key.services?.traveler?.status && key.services?.traveler?.status === \"requested\" && Scope.checkScopes(['clients_travelers_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-success border-success\"\n                        icon={<FontAwesome name={\"check\"} />}\n                        onClick={() => Alert.confirm({ action: approveRequest({ travelerId: key._id }) })}\n                    />\n                )}\n                {Scope.checkScopes(['clients_users_index']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-primary border-primary\"\n                        icon={<FontAwesome name={\"info\"} />}\n                        onClick={() => history.push('/admin/client/users-profile/' + key._id)}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['clients_travelers_view']) && (\n                <Button\n                    size=\"medium\"\n                    className=\"minimum-mr\"\n                    type=\"secondary\"\n                    onClick={() => setState({ ...state, filterVisible: true })}\n                >\n                    <FeatherIcon icon=\"filter\" size={14} />\n                    Filters\n                </Button>\n            )}\n        </div>,\n    ]\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Travelers\"\n                subTitle={`List of all ${travelers?.total} Travelers.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={travelers.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: travelers.total,\n                        current: travelers.page,\n                        onChange: async (pageNo, perPageNo) => await setFilters({ ...filters, page: pageNo, perPage: perPageNo }),\n                    }}\n                />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default TravelerList;\n","import React from \"react\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Row, Select} from \"antd\";\nimport {useDispatch} from \"react-redux\";\n\nconst TravelersFilter = (\n    {\n        filter,\n        state,\n        setState,\n        initialFilters,\n        filters,\n        setFilters,\n        isLoading\n    }\n) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n    const validateMessages = { required: '${label} is required!' };\n\n    const handleSubmit = async (data) => {\n        await setFilters({\n            ...filters,\n            ...data,\n            name: data.name.toString(),\n            phone: data.number.toString(),\n            email: data.email.toString(),\n            gender: data.gender.toString(),\n        })\n        await setState({...state, filterVisible: false})\n    };\n\n    const resetFilters = async () => {\n        await setFilters(initialFilters);\n        await filter.resetFields();\n    }\n\n    const footerButtons = [\n        <Button\n            key=\"reset-button\"\n            htmlType=\"button\"\n            type=\"secondary\"\n            disabled={isLoading}\n            size=\"medium\"\n            onClick={resetFilters}\n        >\n            {isLoading ? 'Loading...' : 'Reset'}\n        </Button>,\n        <Button\n            form=\"travelersFilterForm\"\n            key=\"submit-button\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return (\n        <Col md={12}>\n            <Modal\n                type={\"primary\"}\n                title=\"Travelers Filter\"\n                visible={state.filterVisible}\n                onCancel={() => setState({...state, filterVisible: false})}\n                footer={footerButtons}\n                width={800}\n            >\n                <Form\n                    {...layout}\n                    name={'travelersFilter'}\n                    form={filter}\n                    id={'travelersFilterForm'}\n                    className=\"my-form\"\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <Row>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"name\"\n                                initialValue={filters?.name ? filters.name : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Name\"\n                            >\n                                <Input  placeholder=\"Name\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"email\"\n                                initialValue={filters?.email ? filters.email : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Email\"\n                            >\n                                <Input placeholder=\"Email\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"number\"\n                                initialValue={filters?.phone ? filters.phone : ''}\n                                rules={[{ required: false }]}\n                                label=\"Mobile Number\"\n                            >\n                                <Input placeholder=\"Mobile Number\"/>\n                            </Form.Item>\n                        </Col>\n                        <Col md={12}>\n                            <Form.Item\n                                name=\"gender\"\n                                initialValue={filters?.gender ? filters.gender : \"\"}\n                                rules={[{ required: false }]}\n                                label=\"Gender\"\n                            >\n                                <Select\n                                    allowClear\n                                    loading={isLoading}\n                                    initialValue={filters?.gender ? filters.gender : \"\"}\n                                >\n                                    <Select.Option value=\"\">Gender</Select.Option>\n                                    <Select.Option value=\"male\">Male</Select.Option>\n                                    <Select.Option value=\"female\">Female</Select.Option>\n                                    <Select.Option value=\"other\">Other</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        </Col>\n    )\n}\n\nexport default TravelersFilter;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Main} from \"../../styled\";\nimport TravelerList from \"./list\";\nimport { fetchTravelers, approveRequest } from \"../../../redux/clients/travelers/actionCreator\";\nimport TravelersFilter from \"./filter\";\nimport {fetchTravelers as fetchUtilitiesTravelers} from \"../../../redux/utilities/actionCreator\";\nimport {Form} from \"antd\";\n\nconst TravelersData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const travelers = useSelector(state => state.clientsTravelers.travelers);\n    const utilitiesTravelers = useSelector(state => state.utilities.travelers);\n\n    const [filter] = Form.useForm()\n    const [state, setState] = useState({\n        visible: false,\n        showFilter: false,\n        reqModalVisible: false,\n        modalType: 'primary',\n        user: null,\n    });\n\n    const initialFilters = {\n        page: 1,\n        perPage: 10,\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        gender: \"\",\n    }\n\n    const [filters, setFilters] = useState(initialFilters);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchTravelers(filters))\n        };\n        fetchData().then(r => {});\n    }, [filters]);\n\n    const getTravelers = async (page, perPage) => await dispatch(fetchTravelers({page, perPage}));\n\n    return (\n        <Main>\n            <TravelerList\n                state={state}\n                setState={setState}\n                isLoading={isLoading}\n                filters={filters}\n                setFilters={setFilters}\n                travelers={travelers}\n                getTravelers={getTravelers}\n                approveRequest={approveRequest}\n            />\n            <TravelersFilter\n                filter={filter}\n                state={state}\n                setState={setState}\n                initialFilters={initialFilters}\n                filters={filters}\n                setFilters={setFilters}\n                users={utilitiesTravelers}\n                fetchUsers={fetchUtilitiesTravelers}\n                isLoading={isLoading}\n            />\n        </Main>\n    )\n}\n\nexport default TravelersData;\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchTravelersAction } = actions;\n\nexport const fetchTravelers = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: Constants.CLIENTS + 'travelers',\n            queries,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchTravelersAction(cb)))\n    };\n};\n\nexport const approveRequest = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: Constants.CLIENTS + 'travelers/approve',\n            auth: 'bearer',\n            body: data\n        }, async (cb) => dispatch(fetchTravelers({page: 1, perPage: 10})))\n    };\n};\n"],"sourceRoot":""}