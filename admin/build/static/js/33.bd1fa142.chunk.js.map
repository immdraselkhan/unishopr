{"version":3,"sources":["container/webSetup/leadAttributes/list.js","container/webSetup/leadAttributes/form.js","redux/webSetup/leadAttribute/actionCreator.js","container/webSetup/leadAttributes/index.js"],"names":["LeadAttributeList","showModal","isLoading","leadAttributes","getLeadAttributes","getLeadAttributeInfo","deleteLeadAttribute","columns","title","dataIndex","key","className","render","Scope","checkScopes","size","type","icon","name","onClick","Alert","confirm","action","headerButtons","ghost","subTitle","total","onBack","window","history","back","extra","rowKey","bordered","loading","dataSource","data","pagination","current","page","onChange","pageNo","perPageNo","LeadAttributeForm","form","state","leadAttribute","addLeadAttribute","updateLeadAttribute","countries","handleOk","dispatch","useDispatch","handleSubmit","_id","Object","assign","footerButtons","htmlType","disabled","md","visible","onCancel","footer","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","rules","initialValue","label","placeholder","description","TextArea","country","Option","value","length","map","status","Constants","STATUS","si","fetchLeadAttributeAction","actions","fetchLeadAttributesAction","resetLeadAttributeFormAction","req","postRequest","url","WEB_SETUP","auth","body","cb","fetchLeadAttributes","perPage","queries","getRequest","putRequest","deleteRequest","LeadAttributesData","useSelector","utilities","wsLeadAttributes","useForm","useState","uploading","setState","useEffect","fetchData","then","r","utilitiesCountries","resetFields","showModalEdit","fetchLeadAttribute"],"mappings":"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","file":"static/js/33.bd1fa142.chunk.js","sourcesContent":["import React from \"react\";\nimport {Scope} from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Alert} from \"../../../services/alertService\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\nimport {PageHeader, Table, Button as AntButton} from \"antd\";\n\nconst LeadAttributeList = (\n    {\n        showModal,\n        isLoading,\n        leadAttributes,\n        getLeadAttributes,\n        getLeadAttributeInfo,\n        deleteLeadAttribute\n    }\n) => {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n        },\n        {\n            title: 'Value',\n            dataIndex: 'value',\n            key: 'value',\n        },\n        {\n            title: 'Type',\n            dataIndex: 'type',\n            key: 'type',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            dataIndex: '_id',\n            key: '_id',\n            render: (key) => <div className=\"text-right\">\n                {Scope.checkScopes(['ws_lead_attributes_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-info border-info\"\n                        icon={<FontAwesome name={\"edit\"} />}\n                        onClick={() => getLeadAttributeInfo(key)}\n                    />\n                )}\n                {Scope.checkScopes(['ws_lead_attributes_delete']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-danger border-danger\"\n                        icon={<FontAwesome name={\"trash\"} />}\n                        onClick={() => Alert.confirm({action: deleteLeadAttribute(key)})}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['ws_lead_attributes_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14}/>\n                    Add New\n                </Button>\n            )}\n        </div>\n    ];\n\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Lead Attributes\"\n                subTitle={`List of all ${leadAttributes?.total} Lead Attributes.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={leadAttributes.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: leadAttributes.total,\n                        current: leadAttributes.page,\n                        onChange: async (pageNo, perPageNo) => await getLeadAttributes(pageNo, perPageNo)\n                    }}\n                />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default LeadAttributeList;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Select} from \"antd\";\nimport {Constants} from \"../../../config/constants\";\n\nconst LeadAttributeForm = (\n    {\n        form,\n        state,\n        leadAttribute,\n        addLeadAttribute,\n        updateLeadAttribute,\n        isLoading,\n        countries,\n        handleOk\n    }\n) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n    const validateMessages = { required: '${label} is required!' };\n\n    const handleSubmit = async (data) => {\n        if (leadAttribute._id){\n            Object.assign(data, {_id: leadAttribute._id});\n            await dispatch(updateLeadAttribute(data, handleOk))\n        } else\n            await dispatch(addLeadAttribute(data, handleOk));\n    };\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\"\n        >\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n\n    return (\n        <Col md={12}>\n            <Modal\n                type={\"primary\"}\n                title=\"Lead Attributes Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n            >\n                <Form\n                    {...layout}\n                    name={'leadAttributeForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        name=\"name\"\n                        rules={[{required: true}]}\n                        initialValue={leadAttribute.name ? leadAttribute.name : null}\n                        label=\"Name\"\n                    >\n                        <Input placeholder=\"name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"description\"\n                        initialValue={leadAttribute.description ? leadAttribute.description : null}\n                        rules={[{ required: false }]}\n                        label=\"Description\"\n                    >\n                        <Input.TextArea placeholder=\"Description\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"country\"\n                        initialValue={leadAttribute?.country?._id ? leadAttribute.country._id : ''}\n                        rules={[{ required: false }]}\n                        label=\"Country\">\n                        <Select>\n                            <Select.Option value=\"\">Country</Select.Option>\n                            {countries.length && countries.map((country) => (\n                                <Select.Option key={country._id} value={country._id}>{country.name}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"value\"\n                        rules={[{required: false}]}\n                        initialValue={leadAttribute.value ? leadAttribute.value : null}\n                        label=\"Value\">\n                        <Input type={'number'} placeholder=\"Value\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"type\"\n                        rules={[{required: false}]}\n                        initialValue={leadAttribute.type ? leadAttribute.type : null}\n                        label=\"Type\">\n                        <Select>\n                            <Select.Option value=\"\">Type</Select.Option>\n                            <Select.Option value=\"percentage\">Percentage</Select.Option>\n                            <Select.Option value=\"flat\">Flat</Select.Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"status\"\n                        initialValue={leadAttribute.status ? leadAttribute.status : ''}\n                        rules={[{ required: true }]}\n                        label=\"Status\"\n                    >\n                        <Select>\n                            {Constants.STATUS.map((status, si) => (\n                                <Select.Option key={si} value={status.value}>{status.label}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </Col>\n    )\n}\n\nexport default LeadAttributeForm;\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchLeadAttributeAction, fetchLeadAttributesAction, resetLeadAttributeFormAction } = actions;\n\nexport const addLeadAttribute = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({\n            url: `${Constants.WEB_SETUP}lead-attributes`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchLeadAttributes({page: 1, perPage: 10}));\n            if (action) await action();\n        })\n    };\n};\n\nexport const fetchLeadAttributes = (queries) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.WEB_SETUP}lead-attributes`,\n            queries,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchLeadAttributesAction(cb)))\n    };\n};\n\nexport const updateLeadAttribute = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({\n            url: `${Constants.WEB_SETUP}lead-attributes/${data._id}`,\n            auth: 'bearer',\n            body: data\n        },  async (cb) => {\n            await dispatch(fetchLeadAttributes({page: 1, perPage: 10}));\n            if (action) await action();\n        })\n    };\n};\n\nexport const resetLeadAttributeForm = () => dispatch => dispatch(resetLeadAttributeFormAction());\nexport const fetchLeadAttribute = (_id, action) => {\n    return async dispatch => {\n        await req.getRequest({\n            url: `${Constants.WEB_SETUP}lead-attributes/${_id}`,\n            auth: 'bearer'\n        }, async (cb) => {\n            await dispatch(fetchLeadAttributeAction(cb));\n            if (action) await action();\n        })\n    };\n};\n\nexport const deleteLeadAttribute = (_id) => {\n    return async dispatch => {\n        await req.deleteRequest({\n            url: `${Constants.WEB_SETUP}lead-attributes/${_id}`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchLeadAttributes({page: 1, perPage: 10})))\n    };\n};\n","import React, {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Main} from \"../../styled\";\nimport {Form} from \"antd\";\nimport LeadAttributeList from \"./list\";\nimport LeadAttributeForm from \"./form\";\nimport {\n    addLeadAttribute,\n    fetchLeadAttributes,\n    fetchLeadAttribute,\n    updateLeadAttribute,\n    deleteLeadAttribute,\n    resetLeadAttributeForm\n} from \"../../../redux/webSetup/leadAttribute/actionCreator\";\nimport {fetchCountries as utilitiesCountries} from \"../../../redux/utilities/actionCreator\";\n\nconst LeadAttributesData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const leadAttributes = useSelector(state => state.wsLeadAttributes.leadAttributes);\n    const leadAttribute = useSelector(state => state.wsLeadAttributes.leadAttribute);\n    const countries = useSelector(state => state.utilities.countries);\n    const [form] = Form.useForm()\n\n    const [state, setState] = useState({\n        visible: false,\n        uploading: false,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchLeadAttributes({page: 1, perPage: 10}))\n        };\n        fetchData().then(r => {});\n    }, [dispatch]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(utilitiesCountries())\n        };\n        fetchData().then(r => {});\n    }, []);\n\n    const getLeadAttributes = async (page, perPage) => await dispatch(fetchLeadAttributes({page, perPage}));\n    const getLeadAttributeInfo = (_id) => dispatch(fetchLeadAttribute(_id, showModalEdit));\n    const showModal = async type => {\n        await setState({ ...state, visible: true });\n        await dispatch(resetLeadAttributeForm());\n        await form.resetFields();\n    };\n\n    const showModalEdit = async () => {\n        await setState({ ...state, visible: true });\n        await form.resetFields();\n    };\n\n    const handleOk = () => {\n        setState({ ...state, visible: false });\n    };\n\n    return (\n        <Main>\n            <LeadAttributeList\n                state={state}\n                setState={setState}\n                showModal={showModal}\n                isLoading={isLoading}\n                leadAttributes={leadAttributes}\n                getLeadAttributes={getLeadAttributes}\n                getLeadAttributeInfo={getLeadAttributeInfo}\n                deleteLeadAttribute={deleteLeadAttribute}\n            />\n\n            <LeadAttributeForm\n                form={form}\n                state={state}\n                countries={countries}\n                leadAttribute={leadAttribute}\n                addLeadAttribute={addLeadAttribute}\n                updateLeadAttribute={updateLeadAttribute}\n                handleOk={handleOk}\n                isLoading={isLoading}\n            />\n        </Main>\n    )\n}\n\nexport default LeadAttributesData;\n"],"sourceRoot":""}