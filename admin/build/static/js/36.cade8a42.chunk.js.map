{"version":3,"sources":["container/webSetup/subCategories/list.js","container/webSetup/subCategories/form.js","redux/webSetup/subCategories/actionCreator.js","container/webSetup/subCategories/index.js"],"names":["SubCategoryList","showModal","isLoading","subCategories","getSubCategories","getSubCategoryInfo","deleteSubCategory","columns","title","dataIndex","key","render","category","name","className","Scope","checkScopes","size","type","icon","onClick","Alert","confirm","action","headerButtons","ghost","subTitle","total","onBack","window","history","back","extra","rowKey","bordered","loading","dataSource","data","pagination","current","page","onChange","pageNo","perPageNo","SubCategoryForm","form","state","subCategory","addSubCategory","updateSubCategory","categories","handleOk","dispatch","useDispatch","handleSubmit","_id","Object","assign","footerButtons","htmlType","disabled","md","modalType","visible","onCancel","footer","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","rules","initialValue","label","placeholder","showSearch","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","Option","value","length","map","description","TextArea","status","fetchSubCategoryAction","actions","fetchSubCategoriesAction","resetSubCategoryFormAction","req","postRequest","url","Constants","WEB_SETUP","auth","body","cb","fetchSubCategories","perPage","queries","getRequest","putRequest","deleteRequest","SubCategoriesData","useSelector","utilities","wsSubCategories","useForm","useState","colorModal","uploading","setState","useEffect","utilitiesCategories","fetchData","then","r","resetFields","showModalEdit","fetchSubCategory"],"mappings":"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","file":"static/js/36.cade8a42.chunk.js","sourcesContent":["import React from \"react\";\nimport {Scope} from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Alert} from \"../../../services/alertService\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\nimport {Button as AntButton, PageHeader, Table} from \"antd\";\n\nconst SubCategoryList = ({showModal, isLoading, subCategories, getSubCategories, getSubCategoryInfo, deleteSubCategory}) => {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            render: (category) => <>{category?.name}</>\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            dataIndex: '_id',\n            key: '_id',\n            render: (key) => <div className=\"text-right\">\n                {Scope.checkScopes(['ws_sub_categories_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-info border-info\"\n                        icon={<FontAwesome name={\"edit\"} />}\n                        onClick={() => getSubCategoryInfo(key)}\n                    />\n                )}\n                {Scope.checkScopes(['ws_sub_categories_delete']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-danger border-danger\"\n                        icon={<FontAwesome name={\"trash\"} />}\n                        onClick={() => Alert.confirm({action: deleteSubCategory(key)})}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['ws_sub_categories_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14}/>\n                    Add New\n                </Button>\n            )}\n        </div>\n    ]\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Sub Categories\"\n                subTitle={`List of all ${subCategories?.total} Sub Categories.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={subCategories.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: subCategories.total,\n                        current: subCategories.page,\n                        onChange: async (pageNo, perPageNo) => await getSubCategories(pageNo, perPageNo)\n                    }} />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default SubCategoryList;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Select} from \"antd\";\n\nconst SubCategoryForm = ({form, state, subCategory, addSubCategory, updateSubCategory, categories, isLoading, handleOk}) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n\n    const validateMessages = {\n        required: '${label} is required!',\n    };\n\n    const handleSubmit = async (data) => {\n        if (subCategory._id){\n            Object.assign(data, {_id: subCategory._id});\n            await dispatch(updateSubCategory(data, handleOk))\n        } else\n            await dispatch(addSubCategory(data, handleOk));\n    };\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\">\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n    return (\n        <Col md={12}>\n            <Modal\n                type={state.modalType}\n                title=\"Sub Category Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n            >\n                <Form\n                    {...layout}\n                    name={'subCategoryForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}>\n                    <Form.Item\n                        name=\"name\"\n                        rules={[{required: true}]}\n                        initialValue={subCategory.name ? subCategory.name : null}\n                        label=\"Name\">\n                        <Input placeholder=\"Name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"category\"\n                        initialValue={subCategory?.category?._id ? subCategory.category._id : ''}\n                        rules={[{ required: true }]}\n                        label=\"Category\">\n                        <Select\n                            showSearch\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                        >\n                            <Select.Option value=\"\">Category</Select.Option>\n                            {categories.length && categories.map((category) => (\n                                <Select.Option key={category._id} value={category._id}>{category.name}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                      name=\"description\"\n                      initialValue={subCategory.description ? subCategory.description : null}\n                      rules={[{ required: true }]}\n                      label=\"Description\">\n                        <Input.TextArea placeholder=\"Description\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"status\"\n                        initialValue={subCategory.status ? subCategory.status : ''}\n                        rules={[{ required: true }]}\n                        label=\"Status\">\n                        <Select>\n                            <Select.Option value=\"\">Status</Select.Option>\n                            <Select.Option value=\"active\">Active</Select.Option>\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n        </Col>\n    )\n}\n\nexport default SubCategoryForm;\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchSubCategoryAction, fetchSubCategoriesAction, resetSubCategoryFormAction } = actions;\n\nexport const addSubCategory = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({ \n            url: `${Constants.WEB_SETUP}sub-categories`, \n            auth: 'bearer', \n            body: data\n        }, async (cb) => {\n            await dispatch(fetchSubCategories({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const fetchSubCategories = (queries) => {\n    return async dispatch => {\n        await req.getRequest({ \n            url: `${Constants.WEB_SETUP}sub-categories`, \n            queries, \n            auth: 'bearer'\n        }, (cb) => dispatch(fetchSubCategoriesAction(cb)))\n    };\n};\n\nexport const updateSubCategory = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({ \n            url: `${Constants.WEB_SETUP}sub-categories/${data._id}`,\n            auth: 'bearer', \n            body: data\n        }, async (cb) => {\n            await dispatch(fetchSubCategories({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const resetSubCategoryForm = () => dispatch => dispatch(resetSubCategoryFormAction());\nexport const fetchSubCategory = (_id, action) => {\n    return async dispatch => {\n        await req.getRequest({ \n            url: `${Constants.WEB_SETUP}sub-categories/${_id}`,\n            auth: 'bearer'\n        }, async (cb) => {\n            await dispatch(fetchSubCategoryAction(cb));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const deleteSubCategory = (_id) => {\n    return async dispatch => {\n        await req.deleteRequest({ \n            url: `${Constants.WEB_SETUP}sub-categories/${_id}`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchSubCategories({page: 1, perPage: 10})))\n    };\n};\n","import React, {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Main} from \"../../styled\";\nimport {Form} from \"antd\";\nimport SubCategoryList from \"./list\";\nimport SubCategoryForm from \"./form\";\nimport {\n    addSubCategory,\n    fetchSubCategories,\n    fetchSubCategory,\n    updateSubCategory,\n    deleteSubCategory,\n    resetSubCategoryForm\n} from \"../../../redux/webSetup/subCategories/actionCreator\";\n\nimport {fetchCategories as utilitiesCategories} from \"../../../redux/utilities/actionCreator\";\n\nconst SubCategoriesData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const subCategories = useSelector(state => state.wsSubCategories.subCategories);\n    const subCategory = useSelector(state => state.wsSubCategories.subCategory);\n    const categories = useSelector(state => state.utilities.categories);\n    const [form] = Form.useForm()\n\n    const [state, setState] = useState({\n        visible: false,\n        modalType: 'primary',\n        colorModal: false,\n        uploading: false,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchSubCategories({page: 1, perPage: 10}))\n            await dispatch(utilitiesCategories())\n        };\n        fetchData().then(r => {});\n    }, []);\n\n    const getSubCategories = async (page, perPage) => await dispatch(fetchSubCategories({page, perPage}));\n    const getSubCategoryInfo = (_id) => dispatch(fetchSubCategory(_id, showModalEdit));\n    const showModal = async type => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: type,\n        });\n        await dispatch(resetSubCategoryForm());\n        await form.resetFields();\n    };\n\n    const showModalEdit = async () => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: \"primary\",\n        });\n        await form.resetFields();\n    };\n\n    const handleOk = () => {\n        setState({\n            ...state,\n            visible: false,\n            colorModal: false,\n        });\n    };\n    return (\n        <Main>\n            <SubCategoryList\n                state={state}\n                setState={setState}\n                showModal={showModal}\n                isLoading={isLoading}\n                subCategories={subCategories}\n                getSubCategories={getSubCategories}\n                getSubCategoryInfo={getSubCategoryInfo}\n                deleteSubCategory={deleteSubCategory}/>\n\n            <SubCategoryForm\n                form={form}\n                state={state}\n                subCategory={subCategory}\n                addSubCategory={addSubCategory}\n                updateSubCategory={updateSubCategory}\n                categories={categories}\n                handleOk={handleOk}\n                isLoading={isLoading}/>\n        </Main>\n    )\n}\n\nexport default SubCategoriesData;\n"],"sourceRoot":""}