{"version":3,"sources":["container/webSetup/childCategories/list.js","container/webSetup/childCategories/form.js","redux/webSetup/childCategories/actionCreator.js","container/webSetup/childCategories/index.js"],"names":["ChildCategoryList","showModal","isLoading","childCategories","getChildCategories","getChildCategoryInfo","deleteChildCategory","columns","title","dataIndex","key","render","category","name","subCategory","className","Scope","checkScopes","size","type","icon","onClick","Alert","confirm","action","headerButtons","ghost","childTitle","total","onBack","window","history","back","extra","rowKey","bordered","loading","dataSource","data","pagination","current","page","onChange","pageNo","perPageNo","ChildCategoryForm","form","state","childCategory","addChildCategory","updateChildCategory","categories","fetchSubCategories","subCategories","handleOk","dispatch","useDispatch","handleSubmit","_id","Object","assign","footerButtons","htmlType","disabled","md","modalType","visible","onCancel","footer","labelCol","span","wrapperCol","id","validateMessages","required","onFinish","Item","rules","initialValue","label","placeholder","showSearch","filterOption","input","option","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","value","Option","length","map","ci","sci","description","TextArea","status","fetchChildCategoryAction","actions","fetchChildCategoriesAction","resetChildCategoryFormAction","req","postRequest","url","Constants","WEB_SETUP","auth","body","cb","fetchChildCategories","perPage","queries","getRequest","putRequest","deleteRequest","ChildCategoriesData","useSelector","utilities","wsChildCategories","useForm","useState","colorModal","uploading","setState","useEffect","utilitiesCategories","fetchData","then","r","resetFields","showModalEdit","fetchChildCategory","utilitiesSubCategories"],"mappings":"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","file":"static/js/31.8cc40105.chunk.js","sourcesContent":["import React from \"react\";\nimport {Scope} from \"../../../services/scopeService\";\nimport FontAwesome from \"react-fontawesome\";\nimport {Alert} from \"../../../services/alertService\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport FeatherIcon from \"feather-icons-react\";\nimport {Button as AntButton, PageHeader, Table} from \"antd\";\n\nconst ChildCategoryList = ({showModal, isLoading, childCategories, getChildCategories, getChildCategoryInfo, deleteChildCategory}) => {\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n            render: (category) => <>{category?.name}</>\n        },\n        {\n            title: 'Sub Category',\n            dataIndex: 'subCategory',\n            key: 'subCategory',\n            render: (subCategory) => <>{subCategory?.name}</>\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            key: 'description',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: <div className=\"text-right\">Action</div>,\n            dataIndex: '_id',\n            key: '_id',\n            render: (key) => <div className=\"text-right\">\n                {Scope.checkScopes(['ws_child_categories_update']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"minimum-mr color-info border-info\"\n                        icon={<FontAwesome name={\"edit\"} />}\n                        onClick={() => getChildCategoryInfo(key)}\n                    />\n                )}\n                {Scope.checkScopes(['ws_child_categories_delete']) && (\n                    <AntButton\n                        size=\"small\"\n                        type=\"ghost\"\n                        className=\"color-danger border-danger\"\n                        icon={<FontAwesome name={\"trash\"} />}\n                        onClick={() => Alert.confirm({action: deleteChildCategory(key)})}\n                    />\n                )}\n            </div>\n        },\n    ];\n\n    const headerButtons = [\n        <div key=\"1\" className=\"page-header-action\">\n            {Scope.checkScopes(['ws_child_categories_create']) && (\n                <Button size=\"medium\" type=\"primary\" onClick={() => showModal('primary')}>\n                    <FeatherIcon icon=\"plus\" size={14}/>\n                    Add New\n                </Button>\n            )}\n        </div>\n    ]\n    return (\n        <div>\n            <PageHeader\n                ghost={false}\n                title=\"Child Categories\"\n                childTitle={`List of all ${childCategories?.total} Child Categories.`}\n                onBack={() => window.history.back()}\n                extra={headerButtons}\n            >\n                <Table\n                    rowKey=\"_id\"\n                    bordered={false}\n                    className=\"table-responsive\"\n                    loading={isLoading}\n                    dataSource={childCategories.data}\n                    columns={columns}\n                    // scroll={{ y: window.innerHeight / 2  }}\n                    pagination={{\n                        total: childCategories.total,\n                        current: childCategories.page,\n                        onChange: async (pageNo, perPageNo) => await getChildCategories(pageNo, perPageNo)\n                    }} />\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default ChildCategoryList;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Button} from \"../../../components/buttons/buttons\";\nimport {Col, Form, Input, Modal, Select} from \"antd\";\n\nconst ChildCategoryForm = (\n    {\n        form,\n        state,\n        childCategory,\n        addChildCategory,\n        updateChildCategory,\n        categories,\n        fetchSubCategories,\n        subCategories,\n        isLoading,\n        handleOk\n    }\n) => {\n    const dispatch = useDispatch()\n    const layout = { labelCol: { span: 8 }, wrapperCol: { span: 16 }}\n\n    const validateMessages = {\n        required: '${label} is required!',\n    };\n\n    const handleSubmit = async (data) => {\n        if (childCategory._id){\n            Object.assign(data, {_id: childCategory._id});\n            await dispatch(updateChildCategory(data, handleOk))\n        } else\n            await dispatch(addChildCategory(data, handleOk));\n    };\n\n    const footerButtons = [\n        <Button\n            form=\"myForm\"\n            key=\"submit\"\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={isLoading}\n            size=\"medium\">\n            {isLoading ? 'Loading...' : 'Submit'}\n        </Button>\n    ];\n    return (\n        <Col md={12}>\n            <Modal\n                type={state.modalType}\n                title=\"Child Category Form\"\n                visible={state.visible}\n                onCancel={() => handleOk()}\n                footer={footerButtons}\n            >\n                <Form\n                    {...layout}\n                    name={'childCategoryForm'}\n                    form={form}\n                    id={'myForm'}\n                    validateMessages={validateMessages}\n                    onFinish={handleSubmit}>\n                    <Form.Item\n                        name=\"name\"\n                        rules={[{required: true}]}\n                        initialValue={childCategory.name ? childCategory.name : null}\n                        label=\"Name\">\n                        <Input placeholder=\"Name\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"category\"\n                        initialValue={childCategory?.category?._id ? childCategory.category._id : ''}\n                        rules={[{ required: true }]}\n                        label=\"Category\">\n                        <Select\n                            showSearch\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                            onChange={(value) => dispatch(fetchSubCategories(value))}\n                        >\n                            <Select.Option value=\"\">Category</Select.Option>\n                            {categories.length && categories.map((category, ci) => (\n                                <Select.Option value={category._id} key={ci}>{category.name}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"subCategory\"\n                        initialValue={childCategory?.subCategory?._id ? childCategory.subCategory._id : ''}\n                        rules={[{ required: true }]}\n                        label=\"Sub Category\">\n                        <Select\n                            showSearch\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\n                        >\n                            <Select.Option value=\"\">Sub Category</Select.Option>\n                            {subCategories.length && subCategories.map((subCategory, sci) => (\n                                <Select.Option value={subCategory._id} key={sci}>{subCategory.name}</Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                      name=\"description\"\n                      initialValue={childCategory.description ? childCategory.description : null}\n                      rules={[{ required: true }]}\n                      label=\"Description\">\n                        <Input.TextArea placeholder=\"Description\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"status\"\n                        initialValue={childCategory.status ? childCategory.status : ''}\n                        rules={[{ required: true }]}\n                        label=\"Status\">\n                        <Select>\n                            <Select.Option value=\"\">Status</Select.Option>\n                            <Select.Option value=\"active\">Active</Select.Option>\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n        </Col>\n    )\n}\n\nexport default ChildCategoryForm;\n","import actions from './actions'\nimport {RequestService as req} from \"../../../services/requestService\";\nimport { Constants } from \"../../../config/constants\";\n\nconst { fetchChildCategoryAction, fetchChildCategoriesAction, resetChildCategoryFormAction } = actions;\n\nexport const addChildCategory = (data, action) => {\n    return async dispatch => {\n        await req.postRequest({\n            url: `${Constants.WEB_SETUP}child-categories`,\n            auth: 'bearer',\n            body: data\n        }, async (cb) => {\n            await dispatch(fetchChildCategories({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const fetchChildCategories = (queries) => {\n    return async dispatch => {\n        await req.getRequest({ \n            url: `${Constants.WEB_SETUP}child-categories`, \n            queries, \n            auth: 'bearer'\n        }, (cb) => dispatch(fetchChildCategoriesAction(cb)))\n    };\n};\n\nexport const updateChildCategory = (data, action) => {\n    return async dispatch => {\n        await req.putRequest({ \n            url: `${Constants.WEB_SETUP}child-categories/${data._id}`,\n            auth: 'bearer', \n            body: data\n        },  async (cb) => {\n            await dispatch(fetchChildCategories({page: 1, perPage: 10}));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const resetChildCategoryForm = () => dispatch => dispatch(resetChildCategoryFormAction());\nexport const fetchChildCategory = (_id, action) => {\n    return async dispatch => {\n        await req.getRequest({ \n            url: `${Constants.WEB_SETUP}child-categories/${_id}`,\n            auth: 'bearer'\n        }, async (cb) => {\n            await dispatch(fetchChildCategoryAction(cb));\n            await dispatch(action);\n        })\n    };\n};\n\nexport const deleteChildCategory = (_id) => {\n    return async dispatch => {\n        await req.deleteRequest({ \n            url: `${Constants.WEB_SETUP}child-categories/${_id}`,\n            auth: 'bearer'\n        }, (cb) => dispatch(fetchChildCategories({page: 1, perPage: 10})))\n    };\n};\n","import React, {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Main} from \"../../styled\";\nimport {Form} from \"antd\";\nimport ChildCategoryList from \"./list\";\nimport ChildCategoryForm from \"./form\";\nimport {\n    addChildCategory,\n    fetchChildCategories,\n    fetchChildCategory,\n    updateChildCategory,\n    deleteChildCategory,\n    resetChildCategoryForm\n} from \"../../../redux/webSetup/childCategories/actionCreator\";\n\nimport {fetchCategories as utilitiesCategories, fetchSubCategories as utilitiesSubCategories} from \"../../../redux/utilities/actionCreator\";\n\nconst ChildCategoriesData = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.utilities.loading);\n    const childCategories = useSelector(state => state.wsChildCategories.childCategories);\n    const childCategory = useSelector(state => state.wsChildCategories.childCategory);\n    const categories = useSelector(state => state.utilities.categories);\n    const subCategories = useSelector(state => state.utilities.subCategories);\n    const [form] = Form.useForm()\n\n    const [state, setState] = useState({\n        visible: false,\n        modalType: 'primary',\n        colorModal: false,\n        uploading: false,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchChildCategories({page: 1, perPage: 10}))\n            await dispatch(utilitiesCategories())\n        };\n        fetchData().then(r => {});\n    }, []);\n\n    const getChildCategories = async (page, perPage) => await dispatch(fetchChildCategories({page, perPage}));\n    const getChildCategoryInfo = (_id) => dispatch(fetchChildCategory(_id, async () => {\n        await showModalEdit();\n        await utilitiesSubCategories(_id)\n    }));\n\n    const showModal = async type => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: type,\n        });\n        await dispatch(resetChildCategoryForm());\n        await form.resetFields();\n    };\n\n    const showModalEdit = async () => {\n        await setState({\n            ...state,\n            visible: true,\n            modalType: \"primary\",\n        });\n        await form.resetFields();\n    };\n\n    const handleOk = () => {\n        setState({\n            ...state,\n            visible: false,\n            colorModal: false,\n        });\n    };\n\n    return (\n        <Main>\n            <ChildCategoryList\n                state={state}\n                setState={setState}\n                showModal={showModal}\n                isLoading={isLoading}\n                childCategories={childCategories}\n                getChildCategories={getChildCategories}\n                getChildCategoryInfo={getChildCategoryInfo}\n                deleteChildCategory={deleteChildCategory}/>\n\n            <ChildCategoryForm\n                form={form}\n                state={state}\n                childCategory={childCategory}\n                addChildCategory={addChildCategory}\n                updateChildCategory={updateChildCategory}\n                categories={categories}\n                fetchSubCategories={utilitiesSubCategories}\n                subCategories={subCategories}\n                handleOk={handleOk}\n                isLoading={isLoading}/>\n        </Main>\n    )\n}\n\nexport default ChildCategoriesData;\n"],"sourceRoot":""}